{"ast":null,"code":"/**\r\n * Copyright (c) 2015-present, Facebook, Inc.\r\n *\r\n * This source code is licensed under the MIT license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n *\r\n *  strict\r\n */\nimport { GraphQLError } from '../../error/GraphQLError';\nimport { Kind } from '../../language/kinds';\nexport function anonOperationNotAloneMessage() {\n  return 'This anonymous operation must be the only defined operation.';\n}\n/**\r\n * Lone anonymous operation\r\n *\r\n * A GraphQL document is only valid if when it contains an anonymous operation\r\n * (the query short-hand) that it contains only that one operation definition.\r\n */\n\nexport function LoneAnonymousOperation(context) {\n  var operationCount = 0;\n  return {\n    Document: function Document(node) {\n      operationCount = node.definitions.filter(function (definition) {\n        return definition.kind === Kind.OPERATION_DEFINITION;\n      }).length;\n    },\n    OperationDefinition: function OperationDefinition(node) {\n      if (!node.name && operationCount > 1) {\n        context.reportError(new GraphQLError(anonOperationNotAloneMessage(), [node]));\n      }\n    }\n  };\n}","map":{"version":3,"sources":["C:/Users/Shutt/Documents/COMPX341/COMPX341-Assignment4/assets/node_modules/@aws-amplify/api/node_modules/graphql/validation/rules/LoneAnonymousOperation.mjs"],"names":["GraphQLError","Kind","anonOperationNotAloneMessage","LoneAnonymousOperation","context","operationCount","Document","node","definitions","filter","definition","kind","OPERATION_DEFINITION","length","OperationDefinition","name","reportError"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAASA,YAAT,QAA6B,0BAA7B;AACA,SAASC,IAAT,QAAqB,sBAArB;AACA,OAAO,SAASC,4BAAT,GAAwC;AAC7C,SAAO,8DAAP;AACD;AACD;AACA;AACA;AACA;AACA;AACA;;AAEA,OAAO,SAASC,sBAAT,CAAgCC,OAAhC,EAAyC;AAC9C,MAAIC,cAAc,GAAG,CAArB;AACA,SAAO;AACLC,IAAAA,QAAQ,EAAE,SAASA,QAAT,CAAkBC,IAAlB,EAAwB;AAChCF,MAAAA,cAAc,GAAGE,IAAI,CAACC,WAAL,CAAiBC,MAAjB,CAAwB,UAAUC,UAAV,EAAsB;AAC7D,eAAOA,UAAU,CAACC,IAAX,KAAoBV,IAAI,CAACW,oBAAhC;AACD,OAFgB,EAEdC,MAFH;AAGD,KALI;AAMLC,IAAAA,mBAAmB,EAAE,SAASA,mBAAT,CAA6BP,IAA7B,EAAmC;AACtD,UAAI,CAACA,IAAI,CAACQ,IAAN,IAAcV,cAAc,GAAG,CAAnC,EAAsC;AACpCD,QAAAA,OAAO,CAACY,WAAR,CAAoB,IAAIhB,YAAJ,CAAiBE,4BAA4B,EAA7C,EAAiD,CAACK,IAAD,CAAjD,CAApB;AACD;AACF;AAVI,GAAP;AAYD","sourcesContent":["/**\r\n * Copyright (c) 2015-present, Facebook, Inc.\r\n *\r\n * This source code is licensed under the MIT license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n *\r\n *  strict\r\n */\r\nimport { GraphQLError } from '../../error/GraphQLError';\r\nimport { Kind } from '../../language/kinds';\r\nexport function anonOperationNotAloneMessage() {\r\n  return 'This anonymous operation must be the only defined operation.';\r\n}\r\n/**\r\n * Lone anonymous operation\r\n *\r\n * A GraphQL document is only valid if when it contains an anonymous operation\r\n * (the query short-hand) that it contains only that one operation definition.\r\n */\r\n\r\nexport function LoneAnonymousOperation(context) {\r\n  var operationCount = 0;\r\n  return {\r\n    Document: function Document(node) {\r\n      operationCount = node.definitions.filter(function (definition) {\r\n        return definition.kind === Kind.OPERATION_DEFINITION;\r\n      }).length;\r\n    },\r\n    OperationDefinition: function OperationDefinition(node) {\r\n      if (!node.name && operationCount > 1) {\r\n        context.reportError(new GraphQLError(anonOperationNotAloneMessage(), [node]));\r\n      }\r\n    }\r\n  };\r\n}"]},"metadata":{},"sourceType":"module"}