{"ast":null,"code":"/**\r\n * Copyright (c) 2015-present, Facebook, Inc.\r\n *\r\n * This source code is licensed under the MIT license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n *\r\n *  strict\r\n */\nimport { GraphQLError } from '../../error/GraphQLError';\nexport function duplicateArgMessage(argName) {\n  return \"There can be only one argument named \\\"\".concat(argName, \"\\\".\");\n}\n/**\r\n * Unique argument names\r\n *\r\n * A GraphQL field or directive is only valid if all supplied arguments are\r\n * uniquely named.\r\n */\n\nexport function UniqueArgumentNames(context) {\n  var knownArgNames = Object.create(null);\n  return {\n    Field: function Field() {\n      knownArgNames = Object.create(null);\n    },\n    Directive: function Directive() {\n      knownArgNames = Object.create(null);\n    },\n    Argument: function Argument(node) {\n      var argName = node.name.value;\n\n      if (knownArgNames[argName]) {\n        context.reportError(new GraphQLError(duplicateArgMessage(argName), [knownArgNames[argName], node.name]));\n      } else {\n        knownArgNames[argName] = node.name;\n      }\n\n      return false;\n    }\n  };\n}","map":{"version":3,"sources":["C:/Users/Shutt/Documents/COMPX341/COMPX341-Assignment4/assets/node_modules/@aws-amplify/api/node_modules/graphql/validation/rules/UniqueArgumentNames.mjs"],"names":["GraphQLError","duplicateArgMessage","argName","concat","UniqueArgumentNames","context","knownArgNames","Object","create","Field","Directive","Argument","node","name","value","reportError"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAASA,YAAT,QAA6B,0BAA7B;AACA,OAAO,SAASC,mBAAT,CAA6BC,OAA7B,EAAsC;AAC3C,SAAO,0CAA0CC,MAA1C,CAAiDD,OAAjD,EAA0D,KAA1D,CAAP;AACD;AACD;AACA;AACA;AACA;AACA;AACA;;AAEA,OAAO,SAASE,mBAAT,CAA6BC,OAA7B,EAAsC;AAC3C,MAAIC,aAAa,GAAGC,MAAM,CAACC,MAAP,CAAc,IAAd,CAApB;AACA,SAAO;AACLC,IAAAA,KAAK,EAAE,SAASA,KAAT,GAAiB;AACtBH,MAAAA,aAAa,GAAGC,MAAM,CAACC,MAAP,CAAc,IAAd,CAAhB;AACD,KAHI;AAILE,IAAAA,SAAS,EAAE,SAASA,SAAT,GAAqB;AAC9BJ,MAAAA,aAAa,GAAGC,MAAM,CAACC,MAAP,CAAc,IAAd,CAAhB;AACD,KANI;AAOLG,IAAAA,QAAQ,EAAE,SAASA,QAAT,CAAkBC,IAAlB,EAAwB;AAChC,UAAIV,OAAO,GAAGU,IAAI,CAACC,IAAL,CAAUC,KAAxB;;AAEA,UAAIR,aAAa,CAACJ,OAAD,CAAjB,EAA4B;AAC1BG,QAAAA,OAAO,CAACU,WAAR,CAAoB,IAAIf,YAAJ,CAAiBC,mBAAmB,CAACC,OAAD,CAApC,EAA+C,CAACI,aAAa,CAACJ,OAAD,CAAd,EAAyBU,IAAI,CAACC,IAA9B,CAA/C,CAApB;AACD,OAFD,MAEO;AACLP,QAAAA,aAAa,CAACJ,OAAD,CAAb,GAAyBU,IAAI,CAACC,IAA9B;AACD;;AAED,aAAO,KAAP;AACD;AAjBI,GAAP;AAmBD","sourcesContent":["/**\r\n * Copyright (c) 2015-present, Facebook, Inc.\r\n *\r\n * This source code is licensed under the MIT license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n *\r\n *  strict\r\n */\r\nimport { GraphQLError } from '../../error/GraphQLError';\r\nexport function duplicateArgMessage(argName) {\r\n  return \"There can be only one argument named \\\"\".concat(argName, \"\\\".\");\r\n}\r\n/**\r\n * Unique argument names\r\n *\r\n * A GraphQL field or directive is only valid if all supplied arguments are\r\n * uniquely named.\r\n */\r\n\r\nexport function UniqueArgumentNames(context) {\r\n  var knownArgNames = Object.create(null);\r\n  return {\r\n    Field: function Field() {\r\n      knownArgNames = Object.create(null);\r\n    },\r\n    Directive: function Directive() {\r\n      knownArgNames = Object.create(null);\r\n    },\r\n    Argument: function Argument(node) {\r\n      var argName = node.name.value;\r\n\r\n      if (knownArgNames[argName]) {\r\n        context.reportError(new GraphQLError(duplicateArgMessage(argName), [knownArgNames[argName], node.name]));\r\n      } else {\r\n        knownArgNames[argName] = node.name;\r\n      }\r\n\r\n      return false;\r\n    }\r\n  };\r\n}"]},"metadata":{},"sourceType":"module"}