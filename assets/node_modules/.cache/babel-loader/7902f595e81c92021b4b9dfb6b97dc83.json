{"ast":null,"code":"/**\r\n * Copyright (c) 2015-present, Facebook, Inc.\r\n *\r\n * This source code is licensed under the MIT license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n *\r\n *  strict\r\n */\nimport invariant from '../jsutils/invariant';\n/**\r\n * Given a GraphQLError, format it according to the rules described by the\r\n * Response Format, Errors section of the GraphQL Specification.\r\n */\n\nexport function formatError(error) {\n  !error ? invariant(0, 'Received null or undefined error.') : void 0;\n  var message = error.message || 'An unknown error occurred.';\n  var locations = error.locations;\n  var path = error.path;\n  var extensions = error.extensions;\n  return extensions ? {\n    message: message,\n    locations: locations,\n    path: path,\n    extensions: extensions\n  } : {\n    message: message,\n    locations: locations,\n    path: path\n  };\n}","map":{"version":3,"sources":["C:/Users/Shutt/Documents/COMPX341/COMPX341-Assignment4/assets/node_modules/@aws-amplify/api/node_modules/graphql/error/formatError.mjs"],"names":["invariant","formatError","error","message","locations","path","extensions"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAOA,SAAP,MAAsB,sBAAtB;AAEA;AACA;AACA;AACA;;AACA,OAAO,SAASC,WAAT,CAAqBC,KAArB,EAA4B;AACjC,GAACA,KAAD,GAASF,SAAS,CAAC,CAAD,EAAI,mCAAJ,CAAlB,GAA6D,KAAK,CAAlE;AACA,MAAIG,OAAO,GAAGD,KAAK,CAACC,OAAN,IAAiB,4BAA/B;AACA,MAAIC,SAAS,GAAGF,KAAK,CAACE,SAAtB;AACA,MAAIC,IAAI,GAAGH,KAAK,CAACG,IAAjB;AACA,MAAIC,UAAU,GAAGJ,KAAK,CAACI,UAAvB;AACA,SAAOA,UAAU,GAAG;AAClBH,IAAAA,OAAO,EAAEA,OADS;AAElBC,IAAAA,SAAS,EAAEA,SAFO;AAGlBC,IAAAA,IAAI,EAAEA,IAHY;AAIlBC,IAAAA,UAAU,EAAEA;AAJM,GAAH,GAKb;AACFH,IAAAA,OAAO,EAAEA,OADP;AAEFC,IAAAA,SAAS,EAAEA,SAFT;AAGFC,IAAAA,IAAI,EAAEA;AAHJ,GALJ;AAUD","sourcesContent":["/**\r\n * Copyright (c) 2015-present, Facebook, Inc.\r\n *\r\n * This source code is licensed under the MIT license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n *\r\n *  strict\r\n */\r\nimport invariant from '../jsutils/invariant';\r\n\r\n/**\r\n * Given a GraphQLError, format it according to the rules described by the\r\n * Response Format, Errors section of the GraphQL Specification.\r\n */\r\nexport function formatError(error) {\r\n  !error ? invariant(0, 'Received null or undefined error.') : void 0;\r\n  var message = error.message || 'An unknown error occurred.';\r\n  var locations = error.locations;\r\n  var path = error.path;\r\n  var extensions = error.extensions;\r\n  return extensions ? {\r\n    message: message,\r\n    locations: locations,\r\n    path: path,\r\n    extensions: extensions\r\n  } : {\r\n    message: message,\r\n    locations: locations,\r\n    path: path\r\n  };\r\n}"]},"metadata":{},"sourceType":"module"}