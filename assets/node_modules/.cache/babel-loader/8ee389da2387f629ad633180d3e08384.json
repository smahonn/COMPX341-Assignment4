{"ast":null,"code":"/**\r\n * Copyright (c) 2015-present, Facebook, Inc.\r\n *\r\n * This source code is licensed under the MIT license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n *\r\n *  strict\r\n */\nimport invariant from '../jsutils/invariant';\nimport { getIntrospectionQuery } from './introspectionQuery';\nimport { execute } from '../execution/execute';\nimport { parse } from '../language/parser';\n/**\r\n * Build an IntrospectionQuery from a GraphQLSchema\r\n *\r\n * IntrospectionQuery is useful for utilities that care about type and field\r\n * relationships, but do not need to traverse through those relationships.\r\n *\r\n * This is the inverse of buildClientSchema. The primary use case is outside\r\n * of the server context, for instance when doing schema comparisons.\r\n */\n\nexport function introspectionFromSchema(schema, options) {\n  var queryAST = parse(getIntrospectionQuery(options));\n  var result = execute(schema, queryAST);\n  !(!result.then && !result.errors && result.data) ? invariant(0) : void 0;\n  return result.data;\n}","map":{"version":3,"sources":["C:/Users/Shutt/Documents/COMPX341/COMPX341-Assignment4/assets/node_modules/@aws-amplify/api/node_modules/graphql/utilities/introspectionFromSchema.mjs"],"names":["invariant","getIntrospectionQuery","execute","parse","introspectionFromSchema","schema","options","queryAST","result","then","errors","data"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAOA,SAAP,MAAsB,sBAAtB;AACA,SAASC,qBAAT,QAAsC,sBAAtC;AACA,SAASC,OAAT,QAAwB,sBAAxB;AACA,SAASC,KAAT,QAAsB,oBAAtB;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,OAAO,SAASC,uBAAT,CAAiCC,MAAjC,EAAyCC,OAAzC,EAAkD;AACvD,MAAIC,QAAQ,GAAGJ,KAAK,CAACF,qBAAqB,CAACK,OAAD,CAAtB,CAApB;AACA,MAAIE,MAAM,GAAGN,OAAO,CAACG,MAAD,EAASE,QAAT,CAApB;AACA,IAAE,CAACC,MAAM,CAACC,IAAR,IAAgB,CAACD,MAAM,CAACE,MAAxB,IAAkCF,MAAM,CAACG,IAA3C,IAAmDX,SAAS,CAAC,CAAD,CAA5D,GAAkE,KAAK,CAAvE;AACA,SAAOQ,MAAM,CAACG,IAAd;AACD","sourcesContent":["/**\r\n * Copyright (c) 2015-present, Facebook, Inc.\r\n *\r\n * This source code is licensed under the MIT license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n *\r\n *  strict\r\n */\r\nimport invariant from '../jsutils/invariant';\r\nimport { getIntrospectionQuery } from './introspectionQuery';\r\nimport { execute } from '../execution/execute';\r\nimport { parse } from '../language/parser';\r\n\r\n/**\r\n * Build an IntrospectionQuery from a GraphQLSchema\r\n *\r\n * IntrospectionQuery is useful for utilities that care about type and field\r\n * relationships, but do not need to traverse through those relationships.\r\n *\r\n * This is the inverse of buildClientSchema. The primary use case is outside\r\n * of the server context, for instance when doing schema comparisons.\r\n */\r\nexport function introspectionFromSchema(schema, options) {\r\n  var queryAST = parse(getIntrospectionQuery(options));\r\n  var result = execute(schema, queryAST);\r\n  !(!result.then && !result.errors && result.data) ? invariant(0) : void 0;\r\n  return result.data;\r\n}"]},"metadata":{},"sourceType":"module"}