{"ast":null,"code":"var Hmac = require('./browserHmac');\n\nvar Md5 = require('./browserMd5');\n\nvar Sha1 = require('./browserSha1');\n\nvar Sha256 = require('./browserSha256');\n/**\r\n * @api private\r\n */\n\n\nmodule.exports = exports = {\n  createHash: function createHash(alg) {\n    alg = alg.toLowerCase();\n\n    if (alg === 'md5') {\n      return new Md5();\n    } else if (alg === 'sha256') {\n      return new Sha256();\n    } else if (alg === 'sha1') {\n      return new Sha1();\n    }\n\n    throw new Error('Hash algorithm ' + alg + ' is not supported in the browser SDK');\n  },\n  createHmac: function createHmac(alg, key) {\n    alg = alg.toLowerCase();\n\n    if (alg === 'md5') {\n      return new Hmac(Md5, key);\n    } else if (alg === 'sha256') {\n      return new Hmac(Sha256, key);\n    } else if (alg === 'sha1') {\n      return new Hmac(Sha1, key);\n    }\n\n    throw new Error('HMAC algorithm ' + alg + ' is not supported in the browser SDK');\n  },\n  createSign: function createSign() {\n    throw new Error('createSign is not implemented in the browser');\n  }\n};","map":{"version":3,"sources":["C:/Users/Shutt/Documents/COMPX341/COMPX341-Assignment4/assets/node_modules/aws-sdk/lib/browserCryptoLib.js"],"names":["Hmac","require","Md5","Sha1","Sha256","module","exports","createHash","alg","toLowerCase","Error","createHmac","key","createSign"],"mappings":"AAAA,IAAIA,IAAI,GAAGC,OAAO,CAAC,eAAD,CAAlB;;AACA,IAAIC,GAAG,GAAGD,OAAO,CAAC,cAAD,CAAjB;;AACA,IAAIE,IAAI,GAAGF,OAAO,CAAC,eAAD,CAAlB;;AACA,IAAIG,MAAM,GAAGH,OAAO,CAAC,iBAAD,CAApB;AAEA;AACA;AACA;;;AACAI,MAAM,CAACC,OAAP,GAAiBA,OAAO,GAAG;AACvBC,EAAAA,UAAU,EAAE,SAASA,UAAT,CAAoBC,GAApB,EAAyB;AACnCA,IAAAA,GAAG,GAAGA,GAAG,CAACC,WAAJ,EAAN;;AACA,QAAID,GAAG,KAAK,KAAZ,EAAmB;AACjB,aAAO,IAAIN,GAAJ,EAAP;AACD,KAFD,MAEO,IAAIM,GAAG,KAAK,QAAZ,EAAsB;AAC3B,aAAO,IAAIJ,MAAJ,EAAP;AACD,KAFM,MAEA,IAAII,GAAG,KAAK,MAAZ,EAAoB;AACzB,aAAO,IAAIL,IAAJ,EAAP;AACD;;AAED,UAAM,IAAIO,KAAJ,CAAU,oBAAoBF,GAApB,GAA0B,sCAApC,CAAN;AACD,GAZsB;AAavBG,EAAAA,UAAU,EAAE,SAASA,UAAT,CAAoBH,GAApB,EAAyBI,GAAzB,EAA8B;AACxCJ,IAAAA,GAAG,GAAGA,GAAG,CAACC,WAAJ,EAAN;;AACA,QAAID,GAAG,KAAK,KAAZ,EAAmB;AACjB,aAAO,IAAIR,IAAJ,CAASE,GAAT,EAAcU,GAAd,CAAP;AACD,KAFD,MAEO,IAAIJ,GAAG,KAAK,QAAZ,EAAsB;AAC3B,aAAO,IAAIR,IAAJ,CAASI,MAAT,EAAiBQ,GAAjB,CAAP;AACD,KAFM,MAEA,IAAIJ,GAAG,KAAK,MAAZ,EAAoB;AACzB,aAAO,IAAIR,IAAJ,CAASG,IAAT,EAAeS,GAAf,CAAP;AACD;;AAED,UAAM,IAAIF,KAAJ,CAAU,oBAAoBF,GAApB,GAA0B,sCAApC,CAAN;AACD,GAxBsB;AAyBvBK,EAAAA,UAAU,EAAE,sBAAW;AACrB,UAAM,IAAIH,KAAJ,CAAU,8CAAV,CAAN;AACD;AA3BsB,CAA3B","sourcesContent":["var Hmac = require('./browserHmac');\r\nvar Md5 = require('./browserMd5');\r\nvar Sha1 = require('./browserSha1');\r\nvar Sha256 = require('./browserSha256');\r\n\r\n/**\r\n * @api private\r\n */\r\nmodule.exports = exports = {\r\n    createHash: function createHash(alg) {\r\n      alg = alg.toLowerCase();\r\n      if (alg === 'md5') {\r\n        return new Md5();\r\n      } else if (alg === 'sha256') {\r\n        return new Sha256();\r\n      } else if (alg === 'sha1') {\r\n        return new Sha1();\r\n      }\r\n\r\n      throw new Error('Hash algorithm ' + alg + ' is not supported in the browser SDK');\r\n    },\r\n    createHmac: function createHmac(alg, key) {\r\n      alg = alg.toLowerCase();\r\n      if (alg === 'md5') {\r\n        return new Hmac(Md5, key);\r\n      } else if (alg === 'sha256') {\r\n        return new Hmac(Sha256, key);\r\n      } else if (alg === 'sha1') {\r\n        return new Hmac(Sha1, key);\r\n      }\r\n\r\n      throw new Error('HMAC algorithm ' + alg + ' is not supported in the browser SDK');\r\n    },\r\n    createSign: function() {\r\n      throw new Error('createSign is not implemented in the browser');\r\n    }\r\n  };\r\n"]},"metadata":{},"sourceType":"script"}