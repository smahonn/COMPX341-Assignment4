{"ast":null,"code":"/**\r\n * Copyright (c) 2015-present, Facebook, Inc.\r\n *\r\n * This source code is licensed under the MIT license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n *\r\n *  strict\r\n */\nimport { GraphQLError } from '../error/GraphQLError';\n/**\r\n * Extracts the root type of the operation from the schema.\r\n */\n\nexport function getOperationRootType(schema, operation) {\n  switch (operation.operation) {\n    case 'query':\n      var queryType = schema.getQueryType();\n\n      if (!queryType) {\n        throw new GraphQLError('Schema does not define the required query root type.', [operation]);\n      }\n\n      return queryType;\n\n    case 'mutation':\n      var mutationType = schema.getMutationType();\n\n      if (!mutationType) {\n        throw new GraphQLError('Schema is not configured for mutations.', [operation]);\n      }\n\n      return mutationType;\n\n    case 'subscription':\n      var subscriptionType = schema.getSubscriptionType();\n\n      if (!subscriptionType) {\n        throw new GraphQLError('Schema is not configured for subscriptions.', [operation]);\n      }\n\n      return subscriptionType;\n\n    default:\n      throw new GraphQLError('Can only have query, mutation and subscription operations.', [operation]);\n  }\n}","map":{"version":3,"sources":["C:/Users/Shutt/Documents/COMPX341/COMPX341-Assignment4/assets/node_modules/@aws-amplify/api/node_modules/graphql/utilities/getOperationRootType.mjs"],"names":["GraphQLError","getOperationRootType","schema","operation","queryType","getQueryType","mutationType","getMutationType","subscriptionType","getSubscriptionType"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAASA,YAAT,QAA6B,uBAA7B;AAEA;AACA;AACA;;AACA,OAAO,SAASC,oBAAT,CAA8BC,MAA9B,EAAsCC,SAAtC,EAAiD;AACtD,UAAQA,SAAS,CAACA,SAAlB;AACE,SAAK,OAAL;AACE,UAAIC,SAAS,GAAGF,MAAM,CAACG,YAAP,EAAhB;;AAEA,UAAI,CAACD,SAAL,EAAgB;AACd,cAAM,IAAIJ,YAAJ,CAAiB,sDAAjB,EAAyE,CAACG,SAAD,CAAzE,CAAN;AACD;;AAED,aAAOC,SAAP;;AAEF,SAAK,UAAL;AACE,UAAIE,YAAY,GAAGJ,MAAM,CAACK,eAAP,EAAnB;;AAEA,UAAI,CAACD,YAAL,EAAmB;AACjB,cAAM,IAAIN,YAAJ,CAAiB,yCAAjB,EAA4D,CAACG,SAAD,CAA5D,CAAN;AACD;;AAED,aAAOG,YAAP;;AAEF,SAAK,cAAL;AACE,UAAIE,gBAAgB,GAAGN,MAAM,CAACO,mBAAP,EAAvB;;AAEA,UAAI,CAACD,gBAAL,EAAuB;AACrB,cAAM,IAAIR,YAAJ,CAAiB,6CAAjB,EAAgE,CAACG,SAAD,CAAhE,CAAN;AACD;;AAED,aAAOK,gBAAP;;AAEF;AACE,YAAM,IAAIR,YAAJ,CAAiB,4DAAjB,EAA+E,CAACG,SAAD,CAA/E,CAAN;AA7BJ;AA+BD","sourcesContent":["/**\r\n * Copyright (c) 2015-present, Facebook, Inc.\r\n *\r\n * This source code is licensed under the MIT license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n *\r\n *  strict\r\n */\r\nimport { GraphQLError } from '../error/GraphQLError';\r\n\r\n/**\r\n * Extracts the root type of the operation from the schema.\r\n */\r\nexport function getOperationRootType(schema, operation) {\r\n  switch (operation.operation) {\r\n    case 'query':\r\n      var queryType = schema.getQueryType();\r\n\r\n      if (!queryType) {\r\n        throw new GraphQLError('Schema does not define the required query root type.', [operation]);\r\n      }\r\n\r\n      return queryType;\r\n\r\n    case 'mutation':\r\n      var mutationType = schema.getMutationType();\r\n\r\n      if (!mutationType) {\r\n        throw new GraphQLError('Schema is not configured for mutations.', [operation]);\r\n      }\r\n\r\n      return mutationType;\r\n\r\n    case 'subscription':\r\n      var subscriptionType = schema.getSubscriptionType();\r\n\r\n      if (!subscriptionType) {\r\n        throw new GraphQLError('Schema is not configured for subscriptions.', [operation]);\r\n      }\r\n\r\n      return subscriptionType;\r\n\r\n    default:\r\n      throw new GraphQLError('Can only have query, mutation and subscription operations.', [operation]);\r\n  }\r\n}"]},"metadata":{},"sourceType":"module"}