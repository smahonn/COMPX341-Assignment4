{"ast":null,"code":"/*\r\n * Copyright 2017-2017 Amazon.com, Inc. or its affiliates. All Rights Reserved.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\"). You may not use this file except in compliance with\r\n * the License. A copy of the License is located at\r\n *\r\n *     http://aws.amazon.com/apache2.0/\r\n *\r\n * or in the \"license\" file accompanying this file. This file is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR\r\n * CONDITIONS OF ANY KIND, either express or implied. See the License for the specific language governing permissions\r\n * and limitations under the License.\r\n */\nvar __assign = this && this.__assign || function () {\n  __assign = Object.assign || function (t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n\n      for (var p in s) {\n        if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n      }\n    }\n\n    return t;\n  };\n\n  return __assign.apply(this, arguments);\n};\n\nvar __awaiter = this && this.__awaiter || function (thisArg, _arguments, P, generator) {\n  function adopt(value) {\n    return value instanceof P ? value : new P(function (resolve) {\n      resolve(value);\n    });\n  }\n\n  return new (P || (P = Promise))(function (resolve, reject) {\n    function fulfilled(value) {\n      try {\n        step(generator.next(value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function rejected(value) {\n      try {\n        step(generator[\"throw\"](value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function step(result) {\n      result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);\n    }\n\n    step((generator = generator.apply(thisArg, _arguments || [])).next());\n  });\n};\n\nvar __generator = this && this.__generator || function (thisArg, body) {\n  var _ = {\n    label: 0,\n    sent: function sent() {\n      if (t[0] & 1) throw t[1];\n      return t[1];\n    },\n    trys: [],\n    ops: []\n  },\n      f,\n      y,\n      t,\n      g;\n  return g = {\n    next: verb(0),\n    \"throw\": verb(1),\n    \"return\": verb(2)\n  }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function () {\n    return this;\n  }), g;\n\n  function verb(n) {\n    return function (v) {\n      return step([n, v]);\n    };\n  }\n\n  function step(op) {\n    if (f) throw new TypeError(\"Generator is already executing.\");\n\n    while (_) {\n      try {\n        if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n        if (y = 0, t) op = [op[0] & 2, t.value];\n\n        switch (op[0]) {\n          case 0:\n          case 1:\n            t = op;\n            break;\n\n          case 4:\n            _.label++;\n            return {\n              value: op[1],\n              done: false\n            };\n\n          case 5:\n            _.label++;\n            y = op[1];\n            op = [0];\n            continue;\n\n          case 7:\n            op = _.ops.pop();\n\n            _.trys.pop();\n\n            continue;\n\n          default:\n            if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) {\n              _ = 0;\n              continue;\n            }\n\n            if (op[0] === 3 && (!t || op[1] > t[0] && op[1] < t[3])) {\n              _.label = op[1];\n              break;\n            }\n\n            if (op[0] === 6 && _.label < t[1]) {\n              _.label = t[1];\n              t = op;\n              break;\n            }\n\n            if (t && _.label < t[2]) {\n              _.label = t[2];\n\n              _.ops.push(op);\n\n              break;\n            }\n\n            if (t[2]) _.ops.pop();\n\n            _.trys.pop();\n\n            continue;\n        }\n\n        op = body.call(thisArg, _);\n      } catch (e) {\n        op = [6, e];\n        y = 0;\n      } finally {\n        f = t = 0;\n      }\n    }\n\n    if (op[0] & 5) throw op[1];\n    return {\n      value: op[0] ? op[1] : void 0,\n      done: true\n    };\n  }\n};\n\nimport { ConsoleLogger as Logger, Parser } from '@aws-amplify/core';\nimport AWSS3Provider from './Providers/AWSS3Provider';\nvar logger = new Logger('StorageClass');\nvar DEFAULT_PROVIDER = 'AWSS3';\n/**\r\n * Provide storage methods to use AWS S3\r\n */\n\nvar StorageClass =\n/** @class */\nfunction () {\n  /**\r\n   * Initialize Storage\r\n   * @param {Object} config - Configuration object for storage\r\n   */\n  function StorageClass() {\n    this._config = {};\n    this._pluggables = [];\n    logger.debug('Storage Options', this._config);\n    this.get = this.get.bind(this);\n    this.put = this.put.bind(this);\n    this.remove = this.remove.bind(this);\n    this.list = this.list.bind(this);\n  }\n\n  StorageClass.prototype.getModuleName = function () {\n    return 'Storage';\n  };\n  /**\r\n   * add plugin into Storage category\r\n   * @param {Object} pluggable - an instance of the plugin\r\n   */\n\n\n  StorageClass.prototype.addPluggable = function (pluggable) {\n    if (pluggable && pluggable.getCategory() === 'Storage') {\n      this._pluggables.push(pluggable);\n\n      var config = {};\n      config = pluggable.configure(this._config[pluggable.getProviderName()]);\n      return config;\n    }\n  };\n  /**\r\n   * Get the plugin object\r\n   * @param providerName - the name of the plugin\r\n   */\n\n\n  StorageClass.prototype.getPluggable = function (providerName) {\n    var pluggable = this._pluggables.find(function (pluggable) {\n      return pluggable.getProviderName() === providerName;\n    });\n\n    if (pluggable === undefined) {\n      logger.debug('No plugin found with providerName', providerName);\n      return null;\n    } else return pluggable;\n  };\n  /**\r\n   * Remove the plugin object\r\n   * @param providerName - the name of the plugin\r\n   */\n\n\n  StorageClass.prototype.removePluggable = function (providerName) {\n    this._pluggables = this._pluggables.filter(function (pluggable) {\n      return pluggable.getProviderName() !== providerName;\n    });\n    return;\n  };\n  /**\r\n   * Configure Storage\r\n   * @param {Object} config - Configuration object for storage\r\n   * @return {Object} - Current configuration\r\n   */\n\n\n  StorageClass.prototype.configure = function (config) {\n    var _this = this;\n\n    logger.debug('configure Storage');\n    if (!config) return this._config;\n    var amplifyConfig = Parser.parseMobilehubConfig(config);\n    var storageKeysFromConfig = Object.keys(amplifyConfig.Storage);\n    var storageArrayKeys = ['bucket', 'region', 'level', 'track', 'customPrefix', 'serverSideEncryption', 'SSECustomerAlgorithm', 'SSECustomerKey', 'SSECustomerKeyMD5', 'SSEKMSKeyId'];\n\n    var isInStorageArrayKeys = function isInStorageArrayKeys(k) {\n      return storageArrayKeys.some(function (x) {\n        return x === k;\n      });\n    };\n\n    var checkConfigKeysFromArray = function checkConfigKeysFromArray(k) {\n      return k.find(function (k) {\n        return isInStorageArrayKeys(k);\n      });\n    };\n\n    if (storageKeysFromConfig && checkConfigKeysFromArray(storageKeysFromConfig) && !amplifyConfig.Storage[DEFAULT_PROVIDER]) {\n      amplifyConfig.Storage[DEFAULT_PROVIDER] = {};\n    }\n\n    Object.entries(amplifyConfig.Storage).map(function (_a) {\n      var key = _a[0],\n          value = _a[1];\n\n      if (key && isInStorageArrayKeys(key) && value !== undefined) {\n        amplifyConfig.Storage[DEFAULT_PROVIDER][key] = value;\n        delete amplifyConfig.Storage[key];\n      }\n    }); // only update new values for each provider\n\n    Object.keys(amplifyConfig.Storage).forEach(function (providerName) {\n      if (typeof amplifyConfig.Storage[providerName] !== 'string') {\n        _this._config[providerName] = __assign(__assign({}, _this._config[providerName]), amplifyConfig.Storage[providerName]);\n      }\n    });\n\n    this._pluggables.forEach(function (pluggable) {\n      pluggable.configure(_this._config[pluggable.getProviderName()]);\n    });\n\n    if (this._pluggables.length === 0) {\n      this.addPluggable(new AWSS3Provider());\n    }\n\n    return this._config;\n  };\n  /**\r\n   * Get a presigned URL of the file or the object data when download:true\r\n   *\r\n   * @param {String} key - key of the object\r\n   * @param {Object} [config] - { level : private|protected|public, download: true|false }\r\n   * @return - A promise resolves to either a presigned url or the object\r\n   */\n\n\n  StorageClass.prototype.get = function (key, config) {\n    return __awaiter(this, void 0, void 0, function () {\n      var _a, provider, prov;\n\n      return __generator(this, function (_b) {\n        _a = (config || {}).provider, provider = _a === void 0 ? DEFAULT_PROVIDER : _a;\n        prov = this._pluggables.find(function (pluggable) {\n          return pluggable.getProviderName() === provider;\n        });\n\n        if (prov === undefined) {\n          logger.debug('No plugin found with providerName', provider);\n          Promise.reject('No plugin found in Storage for the provider');\n        }\n\n        return [2\n        /*return*/\n        , prov.get(key, config)];\n      });\n    });\n  };\n  /**\r\n   * Put a file in storage bucket specified to configure method\r\n   * @param {String} key - key of the object\r\n   * @param {Object} object - File to be put in bucket\r\n   * @param {Object} [config] - { level : private|protected|public, contentType: MIME Types,\r\n   *  progressCallback: function }\r\n   * @return - promise resolves to object on success\r\n   */\n\n\n  StorageClass.prototype.put = function (key, object, config) {\n    return __awaiter(this, void 0, void 0, function () {\n      var _a, provider, prov;\n\n      return __generator(this, function (_b) {\n        _a = (config || {}).provider, provider = _a === void 0 ? DEFAULT_PROVIDER : _a;\n        prov = this._pluggables.find(function (pluggable) {\n          return pluggable.getProviderName() === provider;\n        });\n\n        if (prov === undefined) {\n          logger.debug('No plugin found with providerName', provider);\n          Promise.reject('No plugin found in Storage for the provider');\n        }\n\n        return [2\n        /*return*/\n        , prov.put(key, object, config)];\n      });\n    });\n  };\n  /**\r\n   * Remove the object for specified key\r\n   * @param {String} key - key of the object\r\n   * @param {Object} [config] - { level : private|protected|public }\r\n   * @return - Promise resolves upon successful removal of the object\r\n   */\n\n\n  StorageClass.prototype.remove = function (key, config) {\n    return __awaiter(this, void 0, void 0, function () {\n      var _a, provider, prov;\n\n      return __generator(this, function (_b) {\n        _a = (config || {}).provider, provider = _a === void 0 ? DEFAULT_PROVIDER : _a;\n        prov = this._pluggables.find(function (pluggable) {\n          return pluggable.getProviderName() === provider;\n        });\n\n        if (prov === undefined) {\n          logger.debug('No plugin found with providerName', provider);\n          Promise.reject('No plugin found in Storage for the provider');\n        }\n\n        return [2\n        /*return*/\n        , prov.remove(key, config)];\n      });\n    });\n  };\n  /**\r\n   * List bucket objects relative to the level and prefix specified\r\n   * @param {String} path - the path that contains objects\r\n   * @param {Object} [config] - { level : private|protected|public }\r\n   * @return - Promise resolves to list of keys for all objects in path\r\n   */\n\n\n  StorageClass.prototype.list = function (path, config) {\n    return __awaiter(this, void 0, void 0, function () {\n      var _a, provider, prov;\n\n      return __generator(this, function (_b) {\n        _a = (config || {}).provider, provider = _a === void 0 ? DEFAULT_PROVIDER : _a;\n        prov = this._pluggables.find(function (pluggable) {\n          return pluggable.getProviderName() === provider;\n        });\n\n        if (prov === undefined) {\n          logger.debug('No plugin found with providerName', provider);\n          Promise.reject('No plugin found in Storage for the provider');\n        }\n\n        return [2\n        /*return*/\n        , prov.list(path, config)];\n      });\n    });\n  };\n\n  return StorageClass;\n}();\n\nexport default StorageClass;","map":{"version":3,"sources":["../src/Storage.ts"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["/*\r\n * Copyright 2017-2017 Amazon.com, Inc. or its affiliates. All Rights Reserved.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\"). You may not use this file except in compliance with\r\n * the License. A copy of the License is located at\r\n *\r\n *     http://aws.amazon.com/apache2.0/\r\n *\r\n * or in the \"license\" file accompanying this file. This file is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR\r\n * CONDITIONS OF ANY KIND, either express or implied. See the License for the specific language governing permissions\r\n * and limitations under the License.\r\n */\r\nvar __assign = (this && this.__assign) || function () {\r\n    __assign = Object.assign || function(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\r\n                t[p] = s[p];\r\n        }\r\n        return t;\r\n    };\r\n    return __assign.apply(this, arguments);\r\n};\r\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n};\r\nvar __generator = (this && this.__generator) || function (thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n};\r\nimport { ConsoleLogger as Logger, Parser } from '@aws-amplify/core';\r\nimport AWSS3Provider from './Providers/AWSS3Provider';\r\nvar logger = new Logger('StorageClass');\r\nvar DEFAULT_PROVIDER = 'AWSS3';\r\n/**\r\n * Provide storage methods to use AWS S3\r\n */\r\nvar StorageClass = /** @class */ (function () {\r\n    /**\r\n     * Initialize Storage\r\n     * @param {Object} config - Configuration object for storage\r\n     */\r\n    function StorageClass() {\r\n        this._config = {};\r\n        this._pluggables = [];\r\n        logger.debug('Storage Options', this._config);\r\n        this.get = this.get.bind(this);\r\n        this.put = this.put.bind(this);\r\n        this.remove = this.remove.bind(this);\r\n        this.list = this.list.bind(this);\r\n    }\r\n    StorageClass.prototype.getModuleName = function () {\r\n        return 'Storage';\r\n    };\r\n    /**\r\n     * add plugin into Storage category\r\n     * @param {Object} pluggable - an instance of the plugin\r\n     */\r\n    StorageClass.prototype.addPluggable = function (pluggable) {\r\n        if (pluggable && pluggable.getCategory() === 'Storage') {\r\n            this._pluggables.push(pluggable);\r\n            var config = {};\r\n            config = pluggable.configure(this._config[pluggable.getProviderName()]);\r\n            return config;\r\n        }\r\n    };\r\n    /**\r\n     * Get the plugin object\r\n     * @param providerName - the name of the plugin\r\n     */\r\n    StorageClass.prototype.getPluggable = function (providerName) {\r\n        var pluggable = this._pluggables.find(function (pluggable) { return pluggable.getProviderName() === providerName; });\r\n        if (pluggable === undefined) {\r\n            logger.debug('No plugin found with providerName', providerName);\r\n            return null;\r\n        }\r\n        else\r\n            return pluggable;\r\n    };\r\n    /**\r\n     * Remove the plugin object\r\n     * @param providerName - the name of the plugin\r\n     */\r\n    StorageClass.prototype.removePluggable = function (providerName) {\r\n        this._pluggables = this._pluggables.filter(function (pluggable) { return pluggable.getProviderName() !== providerName; });\r\n        return;\r\n    };\r\n    /**\r\n     * Configure Storage\r\n     * @param {Object} config - Configuration object for storage\r\n     * @return {Object} - Current configuration\r\n     */\r\n    StorageClass.prototype.configure = function (config) {\r\n        var _this = this;\r\n        logger.debug('configure Storage');\r\n        if (!config)\r\n            return this._config;\r\n        var amplifyConfig = Parser.parseMobilehubConfig(config);\r\n        var storageKeysFromConfig = Object.keys(amplifyConfig.Storage);\r\n        var storageArrayKeys = [\r\n            'bucket',\r\n            'region',\r\n            'level',\r\n            'track',\r\n            'customPrefix',\r\n            'serverSideEncryption',\r\n            'SSECustomerAlgorithm',\r\n            'SSECustomerKey',\r\n            'SSECustomerKeyMD5',\r\n            'SSEKMSKeyId',\r\n        ];\r\n        var isInStorageArrayKeys = function (k) {\r\n            return storageArrayKeys.some(function (x) { return x === k; });\r\n        };\r\n        var checkConfigKeysFromArray = function (k) {\r\n            return k.find(function (k) { return isInStorageArrayKeys(k); });\r\n        };\r\n        if (storageKeysFromConfig &&\r\n            checkConfigKeysFromArray(storageKeysFromConfig) &&\r\n            !amplifyConfig.Storage[DEFAULT_PROVIDER]) {\r\n            amplifyConfig.Storage[DEFAULT_PROVIDER] = {};\r\n        }\r\n        Object.entries(amplifyConfig.Storage).map(function (_a) {\r\n            var key = _a[0], value = _a[1];\r\n            if (key && isInStorageArrayKeys(key) && value !== undefined) {\r\n                amplifyConfig.Storage[DEFAULT_PROVIDER][key] = value;\r\n                delete amplifyConfig.Storage[key];\r\n            }\r\n        });\r\n        // only update new values for each provider\r\n        Object.keys(amplifyConfig.Storage).forEach(function (providerName) {\r\n            if (typeof amplifyConfig.Storage[providerName] !== 'string') {\r\n                _this._config[providerName] = __assign(__assign({}, _this._config[providerName]), amplifyConfig.Storage[providerName]);\r\n            }\r\n        });\r\n        this._pluggables.forEach(function (pluggable) {\r\n            pluggable.configure(_this._config[pluggable.getProviderName()]);\r\n        });\r\n        if (this._pluggables.length === 0) {\r\n            this.addPluggable(new AWSS3Provider());\r\n        }\r\n        return this._config;\r\n    };\r\n    /**\r\n     * Get a presigned URL of the file or the object data when download:true\r\n     *\r\n     * @param {String} key - key of the object\r\n     * @param {Object} [config] - { level : private|protected|public, download: true|false }\r\n     * @return - A promise resolves to either a presigned url or the object\r\n     */\r\n    StorageClass.prototype.get = function (key, config) {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var _a, provider, prov;\r\n            return __generator(this, function (_b) {\r\n                _a = (config || {}).provider, provider = _a === void 0 ? DEFAULT_PROVIDER : _a;\r\n                prov = this._pluggables.find(function (pluggable) { return pluggable.getProviderName() === provider; });\r\n                if (prov === undefined) {\r\n                    logger.debug('No plugin found with providerName', provider);\r\n                    Promise.reject('No plugin found in Storage for the provider');\r\n                }\r\n                return [2 /*return*/, prov.get(key, config)];\r\n            });\r\n        });\r\n    };\r\n    /**\r\n     * Put a file in storage bucket specified to configure method\r\n     * @param {String} key - key of the object\r\n     * @param {Object} object - File to be put in bucket\r\n     * @param {Object} [config] - { level : private|protected|public, contentType: MIME Types,\r\n     *  progressCallback: function }\r\n     * @return - promise resolves to object on success\r\n     */\r\n    StorageClass.prototype.put = function (key, object, config) {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var _a, provider, prov;\r\n            return __generator(this, function (_b) {\r\n                _a = (config || {}).provider, provider = _a === void 0 ? DEFAULT_PROVIDER : _a;\r\n                prov = this._pluggables.find(function (pluggable) { return pluggable.getProviderName() === provider; });\r\n                if (prov === undefined) {\r\n                    logger.debug('No plugin found with providerName', provider);\r\n                    Promise.reject('No plugin found in Storage for the provider');\r\n                }\r\n                return [2 /*return*/, prov.put(key, object, config)];\r\n            });\r\n        });\r\n    };\r\n    /**\r\n     * Remove the object for specified key\r\n     * @param {String} key - key of the object\r\n     * @param {Object} [config] - { level : private|protected|public }\r\n     * @return - Promise resolves upon successful removal of the object\r\n     */\r\n    StorageClass.prototype.remove = function (key, config) {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var _a, provider, prov;\r\n            return __generator(this, function (_b) {\r\n                _a = (config || {}).provider, provider = _a === void 0 ? DEFAULT_PROVIDER : _a;\r\n                prov = this._pluggables.find(function (pluggable) { return pluggable.getProviderName() === provider; });\r\n                if (prov === undefined) {\r\n                    logger.debug('No plugin found with providerName', provider);\r\n                    Promise.reject('No plugin found in Storage for the provider');\r\n                }\r\n                return [2 /*return*/, prov.remove(key, config)];\r\n            });\r\n        });\r\n    };\r\n    /**\r\n     * List bucket objects relative to the level and prefix specified\r\n     * @param {String} path - the path that contains objects\r\n     * @param {Object} [config] - { level : private|protected|public }\r\n     * @return - Promise resolves to list of keys for all objects in path\r\n     */\r\n    StorageClass.prototype.list = function (path, config) {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var _a, provider, prov;\r\n            return __generator(this, function (_b) {\r\n                _a = (config || {}).provider, provider = _a === void 0 ? DEFAULT_PROVIDER : _a;\r\n                prov = this._pluggables.find(function (pluggable) { return pluggable.getProviderName() === provider; });\r\n                if (prov === undefined) {\r\n                    logger.debug('No plugin found with providerName', provider);\r\n                    Promise.reject('No plugin found in Storage for the provider');\r\n                }\r\n                return [2 /*return*/, prov.list(path, config)];\r\n            });\r\n        });\r\n    };\r\n    return StorageClass;\r\n}());\r\nexport default StorageClass;\r\n//# sourceMappingURL=Storage.js.map"]},"metadata":{},"sourceType":"module"}