{"ast":null,"code":"/**\r\n * Copyright (c) 2015-present, Facebook, Inc.\r\n *\r\n * This source code is licensed under the MIT license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n *\r\n *  strict\r\n */\nimport { GraphQLError } from '../../error/GraphQLError';\nexport function unknownFragmentMessage(fragName) {\n  return \"Unknown fragment \\\"\".concat(fragName, \"\\\".\");\n}\n/**\r\n * Known fragment names\r\n *\r\n * A GraphQL document is only valid if all `...Fragment` fragment spreads refer\r\n * to fragments defined in the same document.\r\n */\n\nexport function KnownFragmentNames(context) {\n  return {\n    FragmentSpread: function FragmentSpread(node) {\n      var fragmentName = node.name.value;\n      var fragment = context.getFragment(fragmentName);\n\n      if (!fragment) {\n        context.reportError(new GraphQLError(unknownFragmentMessage(fragmentName), [node.name]));\n      }\n    }\n  };\n}","map":{"version":3,"sources":["C:/Users/Shutt/Documents/COMPX341/COMPX341-Assignment4/assets/node_modules/@aws-amplify/api/node_modules/graphql/validation/rules/KnownFragmentNames.mjs"],"names":["GraphQLError","unknownFragmentMessage","fragName","concat","KnownFragmentNames","context","FragmentSpread","node","fragmentName","name","value","fragment","getFragment","reportError"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAASA,YAAT,QAA6B,0BAA7B;AACA,OAAO,SAASC,sBAAT,CAAgCC,QAAhC,EAA0C;AAC/C,SAAO,sBAAsBC,MAAtB,CAA6BD,QAA7B,EAAuC,KAAvC,CAAP;AACD;AACD;AACA;AACA;AACA;AACA;AACA;;AAEA,OAAO,SAASE,kBAAT,CAA4BC,OAA5B,EAAqC;AAC1C,SAAO;AACLC,IAAAA,cAAc,EAAE,SAASA,cAAT,CAAwBC,IAAxB,EAA8B;AAC5C,UAAIC,YAAY,GAAGD,IAAI,CAACE,IAAL,CAAUC,KAA7B;AACA,UAAIC,QAAQ,GAAGN,OAAO,CAACO,WAAR,CAAoBJ,YAApB,CAAf;;AAEA,UAAI,CAACG,QAAL,EAAe;AACbN,QAAAA,OAAO,CAACQ,WAAR,CAAoB,IAAIb,YAAJ,CAAiBC,sBAAsB,CAACO,YAAD,CAAvC,EAAuD,CAACD,IAAI,CAACE,IAAN,CAAvD,CAApB;AACD;AACF;AARI,GAAP;AAUD","sourcesContent":["/**\r\n * Copyright (c) 2015-present, Facebook, Inc.\r\n *\r\n * This source code is licensed under the MIT license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n *\r\n *  strict\r\n */\r\nimport { GraphQLError } from '../../error/GraphQLError';\r\nexport function unknownFragmentMessage(fragName) {\r\n  return \"Unknown fragment \\\"\".concat(fragName, \"\\\".\");\r\n}\r\n/**\r\n * Known fragment names\r\n *\r\n * A GraphQL document is only valid if all `...Fragment` fragment spreads refer\r\n * to fragments defined in the same document.\r\n */\r\n\r\nexport function KnownFragmentNames(context) {\r\n  return {\r\n    FragmentSpread: function FragmentSpread(node) {\r\n      var fragmentName = node.name.value;\r\n      var fragment = context.getFragment(fragmentName);\r\n\r\n      if (!fragment) {\r\n        context.reportError(new GraphQLError(unknownFragmentMessage(fragmentName), [node.name]));\r\n      }\r\n    }\r\n  };\r\n}"]},"metadata":{},"sourceType":"module"}