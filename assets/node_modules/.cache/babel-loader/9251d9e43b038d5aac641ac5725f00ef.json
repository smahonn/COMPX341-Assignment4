{"ast":null,"code":"/*\r\n * Copyright 2017-2017 Amazon.com, Inc. or its affiliates. All Rights Reserved.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\"). You may not use this file except in compliance with\r\n * the License. A copy of the License is located at\r\n *\r\n *     http://aws.amazon.com/apache2.0/\r\n *\r\n * or in the \"license\" file accompanying this file. This file is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR\r\n * CONDITIONS OF ANY KIND, either express or implied. See the License for the specific language governing permissions\r\n * and limitations under the License.\r\n */\nimport AnalyticsClass from './Analytics';\nimport Amplify, { ConsoleLogger as Logger, Hub } from '@aws-amplify/core';\nvar logger = new Logger('Analytics');\nvar endpointUpdated = false;\nvar authConfigured = false;\nvar analyticsConfigured = false;\nvar _instance = null;\n\nif (!_instance) {\n  logger.debug('Create Analytics Instance');\n  _instance = new AnalyticsClass();\n}\n\nvar Analytics = _instance;\nAmplify.register(Analytics);\nexport default Analytics;\nexport { AnalyticsClass };\nexport * from './Providers';\n\nvar listener = function listener(capsule) {\n  var channel = capsule.channel,\n      payload = capsule.payload,\n      source = capsule.source;\n  logger.debug('on hub capsule ' + channel, payload);\n\n  switch (channel) {\n    case 'auth':\n      authEvent(payload);\n      break;\n\n    case 'storage':\n      storageEvent(payload);\n      break;\n\n    case 'analytics':\n      analyticsEvent(payload);\n      break;\n\n    default:\n      break;\n  }\n};\n\nvar storageEvent = function storageEvent(payload) {\n  var _a = payload.data,\n      attrs = _a.attrs,\n      metrics = _a.metrics;\n  if (!attrs) return;\n\n  if (analyticsConfigured) {\n    Analytics.record({\n      name: 'Storage',\n      attributes: attrs,\n      metrics: metrics\n    }).catch(function (e) {\n      logger.debug('Failed to send the storage event automatically', e);\n    });\n  }\n};\n\nvar authEvent = function authEvent(payload) {\n  var event = payload.event;\n\n  if (!event) {\n    return;\n  }\n\n  switch (event) {\n    case 'signIn':\n      if (authConfigured && analyticsConfigured) {\n        Analytics.record({\n          name: '_userauth.sign_in'\n        }).catch(function (e) {\n          logger.debug('Failed to send the sign in event automatically', e);\n        });\n      }\n\n      break;\n\n    case 'signUp':\n      if (authConfigured && analyticsConfigured) {\n        Analytics.record({\n          name: '_userauth.sign_up'\n        }).catch(function (e) {\n          logger.debug('Failed to send the sign up event automatically', e);\n        });\n      }\n\n      break;\n\n    case 'signOut':\n      break;\n\n    case 'signIn_failure':\n      if (authConfigured && analyticsConfigured) {\n        Analytics.record({\n          name: '_userauth.auth_fail'\n        }).catch(function (e) {\n          logger.debug('Failed to send the sign in failure event automatically', e);\n        });\n      }\n\n      break;\n\n    case 'configured':\n      authConfigured = true;\n\n      if (authConfigured && analyticsConfigured) {\n        sendEvents();\n      }\n\n      break;\n  }\n};\n\nvar analyticsEvent = function analyticsEvent(payload) {\n  var event = payload.event;\n  if (!event) return;\n\n  switch (event) {\n    case 'pinpointProvider_configured':\n      analyticsConfigured = true;\n\n      if (authConfigured && analyticsConfigured) {\n        sendEvents();\n      }\n\n      break;\n  }\n};\n\nvar sendEvents = function sendEvents() {\n  var config = Analytics.configure();\n\n  if (!endpointUpdated && config['autoSessionRecord']) {\n    Analytics.updateEndpoint({\n      immediate: true\n    }).catch(function (e) {\n      logger.debug('Failed to update the endpoint', e);\n    });\n    endpointUpdated = true;\n  }\n\n  Analytics.autoTrack('session', {\n    enable: config['autoSessionRecord']\n  });\n};\n\nHub.listen('auth', listener);\nHub.listen('storage', listener);\nHub.listen('analytics', listener);","map":{"version":3,"sources":["../src/index.ts"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["/*\r\n * Copyright 2017-2017 Amazon.com, Inc. or its affiliates. All Rights Reserved.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\"). You may not use this file except in compliance with\r\n * the License. A copy of the License is located at\r\n *\r\n *     http://aws.amazon.com/apache2.0/\r\n *\r\n * or in the \"license\" file accompanying this file. This file is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR\r\n * CONDITIONS OF ANY KIND, either express or implied. See the License for the specific language governing permissions\r\n * and limitations under the License.\r\n */\r\nimport AnalyticsClass from './Analytics';\r\nimport Amplify, { ConsoleLogger as Logger, Hub, } from '@aws-amplify/core';\r\nvar logger = new Logger('Analytics');\r\nvar endpointUpdated = false;\r\nvar authConfigured = false;\r\nvar analyticsConfigured = false;\r\nvar _instance = null;\r\nif (!_instance) {\r\n    logger.debug('Create Analytics Instance');\r\n    _instance = new AnalyticsClass();\r\n}\r\nvar Analytics = _instance;\r\nAmplify.register(Analytics);\r\nexport default Analytics;\r\nexport { AnalyticsClass };\r\nexport * from './Providers';\r\nvar listener = function (capsule) {\r\n    var channel = capsule.channel, payload = capsule.payload, source = capsule.source;\r\n    logger.debug('on hub capsule ' + channel, payload);\r\n    switch (channel) {\r\n        case 'auth':\r\n            authEvent(payload);\r\n            break;\r\n        case 'storage':\r\n            storageEvent(payload);\r\n            break;\r\n        case 'analytics':\r\n            analyticsEvent(payload);\r\n            break;\r\n        default:\r\n            break;\r\n    }\r\n};\r\nvar storageEvent = function (payload) {\r\n    var _a = payload.data, attrs = _a.attrs, metrics = _a.metrics;\r\n    if (!attrs)\r\n        return;\r\n    if (analyticsConfigured) {\r\n        Analytics.record({\r\n            name: 'Storage',\r\n            attributes: attrs,\r\n            metrics: metrics,\r\n        }).catch(function (e) {\r\n            logger.debug('Failed to send the storage event automatically', e);\r\n        });\r\n    }\r\n};\r\nvar authEvent = function (payload) {\r\n    var event = payload.event;\r\n    if (!event) {\r\n        return;\r\n    }\r\n    switch (event) {\r\n        case 'signIn':\r\n            if (authConfigured && analyticsConfigured) {\r\n                Analytics.record({\r\n                    name: '_userauth.sign_in',\r\n                }).catch(function (e) {\r\n                    logger.debug('Failed to send the sign in event automatically', e);\r\n                });\r\n            }\r\n            break;\r\n        case 'signUp':\r\n            if (authConfigured && analyticsConfigured) {\r\n                Analytics.record({\r\n                    name: '_userauth.sign_up',\r\n                }).catch(function (e) {\r\n                    logger.debug('Failed to send the sign up event automatically', e);\r\n                });\r\n            }\r\n            break;\r\n        case 'signOut':\r\n            break;\r\n        case 'signIn_failure':\r\n            if (authConfigured && analyticsConfigured) {\r\n                Analytics.record({\r\n                    name: '_userauth.auth_fail',\r\n                }).catch(function (e) {\r\n                    logger.debug('Failed to send the sign in failure event automatically', e);\r\n                });\r\n            }\r\n            break;\r\n        case 'configured':\r\n            authConfigured = true;\r\n            if (authConfigured && analyticsConfigured) {\r\n                sendEvents();\r\n            }\r\n            break;\r\n    }\r\n};\r\nvar analyticsEvent = function (payload) {\r\n    var event = payload.event;\r\n    if (!event)\r\n        return;\r\n    switch (event) {\r\n        case 'pinpointProvider_configured':\r\n            analyticsConfigured = true;\r\n            if (authConfigured && analyticsConfigured) {\r\n                sendEvents();\r\n            }\r\n            break;\r\n    }\r\n};\r\nvar sendEvents = function () {\r\n    var config = Analytics.configure();\r\n    if (!endpointUpdated && config['autoSessionRecord']) {\r\n        Analytics.updateEndpoint({ immediate: true }).catch(function (e) {\r\n            logger.debug('Failed to update the endpoint', e);\r\n        });\r\n        endpointUpdated = true;\r\n    }\r\n    Analytics.autoTrack('session', {\r\n        enable: config['autoSessionRecord'],\r\n    });\r\n};\r\nHub.listen('auth', listener);\r\nHub.listen('storage', listener);\r\nHub.listen('analytics', listener);\r\n//# sourceMappingURL=index.js.map"]},"metadata":{},"sourceType":"module"}