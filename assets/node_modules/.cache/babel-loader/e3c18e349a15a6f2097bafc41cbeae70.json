{"ast":null,"code":"var AWS = require('../core');\n\nAWS.util.update(AWS.MachineLearning.prototype, {\n  /**\r\n   * @api private\r\n   */\n  setupRequestListeners: function setupRequestListeners(request) {\n    if (request.operation === 'predict') {\n      request.addListener('build', this.buildEndpoint);\n    }\n  },\n\n  /**\r\n   * Updates request endpoint from PredictEndpoint\r\n   * @api private\r\n   */\n  buildEndpoint: function buildEndpoint(request) {\n    var url = request.params.PredictEndpoint;\n\n    if (url) {\n      request.httpRequest.endpoint = new AWS.Endpoint(url);\n    }\n  }\n});","map":{"version":3,"sources":["C:/Users/Shutt/Documents/COMPX341/COMPX341-Assignment4/assets/node_modules/aws-sdk/lib/services/machinelearning.js"],"names":["AWS","require","util","update","MachineLearning","prototype","setupRequestListeners","request","operation","addListener","buildEndpoint","url","params","PredictEndpoint","httpRequest","endpoint","Endpoint"],"mappings":"AAAA,IAAIA,GAAG,GAAGC,OAAO,CAAC,SAAD,CAAjB;;AAEAD,GAAG,CAACE,IAAJ,CAASC,MAAT,CAAgBH,GAAG,CAACI,eAAJ,CAAoBC,SAApC,EAA+C;AAC7C;AACF;AACA;AACEC,EAAAA,qBAAqB,EAAE,SAASA,qBAAT,CAA+BC,OAA/B,EAAwC;AAC7D,QAAIA,OAAO,CAACC,SAAR,KAAsB,SAA1B,EAAqC;AACnCD,MAAAA,OAAO,CAACE,WAAR,CAAoB,OAApB,EAA6B,KAAKC,aAAlC;AACD;AACF,GAR4C;;AAU7C;AACF;AACA;AACA;AACEA,EAAAA,aAAa,EAAE,SAASA,aAAT,CAAuBH,OAAvB,EAAgC;AAC7C,QAAII,GAAG,GAAGJ,OAAO,CAACK,MAAR,CAAeC,eAAzB;;AACA,QAAIF,GAAJ,EAAS;AACPJ,MAAAA,OAAO,CAACO,WAAR,CAAoBC,QAApB,GAA+B,IAAIf,GAAG,CAACgB,QAAR,CAAiBL,GAAjB,CAA/B;AACD;AACF;AAnB4C,CAA/C","sourcesContent":["var AWS = require('../core');\r\n\r\nAWS.util.update(AWS.MachineLearning.prototype, {\r\n  /**\r\n   * @api private\r\n   */\r\n  setupRequestListeners: function setupRequestListeners(request) {\r\n    if (request.operation === 'predict') {\r\n      request.addListener('build', this.buildEndpoint);\r\n    }\r\n  },\r\n\r\n  /**\r\n   * Updates request endpoint from PredictEndpoint\r\n   * @api private\r\n   */\r\n  buildEndpoint: function buildEndpoint(request) {\r\n    var url = request.params.PredictEndpoint;\r\n    if (url) {\r\n      request.httpRequest.endpoint = new AWS.Endpoint(url);\r\n    }\r\n  }\r\n\r\n});\r\n"]},"metadata":{},"sourceType":"script"}