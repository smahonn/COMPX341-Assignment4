{"ast":null,"code":"/*\r\n * Copyright 2017-2017 Amazon.com, Inc. or its affiliates. All Rights Reserved.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\"). You may not use this file except in compliance with\r\n * the License. A copy of the License is located at\r\n *\r\n *     http://aws.amazon.com/apache2.0/\r\n *\r\n * or in the \"license\" file accompanying this file. This file is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR\r\n * CONDITIONS OF ANY KIND, either express or implied. See the License for the specific language governing permissions\r\n * and limitations under the License.\r\n */\nvar SELF = '_self';\nexport var launchUri = function launchUri(url) {\n  var windowProxy = window.open(url, SELF);\n\n  if (windowProxy) {\n    return Promise.resolve(windowProxy);\n  } else {\n    return Promise.reject();\n  }\n};","map":{"version":3,"sources":["../../src/OAuth/urlOpener.ts"],"names":[],"mappings":"AAAA;;;;;;;;;;;AAWG;AAEH,IAAM,IAAI,GAAG,OAAb;AAEA,OAAO,IAAM,SAAS,GAAG,SAAZ,SAAY,CAAA,GAAA,EAAG;AAC3B,MAAM,WAAW,GAAG,MAAM,CAAC,IAAP,CAAY,GAAZ,EAAiB,IAAjB,CAApB;;AACA,MAAI,WAAJ,EAAiB;AAChB,WAAO,OAAO,CAAC,OAAR,CAAgB,WAAhB,CAAP;AACA,GAFD,MAEO;AACN,WAAO,OAAO,CAAC,MAAR,EAAP;AACA;AACD,CAPM","sourceRoot":"","sourcesContent":["/*\r\n * Copyright 2017-2017 Amazon.com, Inc. or its affiliates. All Rights Reserved.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\"). You may not use this file except in compliance with\r\n * the License. A copy of the License is located at\r\n *\r\n *     http://aws.amazon.com/apache2.0/\r\n *\r\n * or in the \"license\" file accompanying this file. This file is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR\r\n * CONDITIONS OF ANY KIND, either express or implied. See the License for the specific language governing permissions\r\n * and limitations under the License.\r\n */\r\nvar SELF = '_self';\r\nexport var launchUri = function (url) {\r\n    var windowProxy = window.open(url, SELF);\r\n    if (windowProxy) {\r\n        return Promise.resolve(windowProxy);\r\n    }\r\n    else {\r\n        return Promise.reject();\r\n    }\r\n};\r\n//# sourceMappingURL=urlOpener.js.map"]},"metadata":{},"sourceType":"module"}