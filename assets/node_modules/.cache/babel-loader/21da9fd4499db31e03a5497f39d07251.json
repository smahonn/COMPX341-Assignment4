{"ast":null,"code":"/*\r\n * Copyright 2019-2020 Amazon.com, Inc. or its affiliates. All Rights Reserved.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\"). You may not use this file except in compliance with\r\n * the License. A copy of the License is located at\r\n *\r\n *     http://aws.amazon.com/apache2.0/\r\n *\r\n * or in the \"license\" file accompanying this file. This file is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR\r\n * CONDITIONS OF ANY KIND, either express or implied. See the License for the specific language governing permissions\r\n * and limitations under the License.\r\n */\nvar __extends = this && this.__extends || function () {\n  var _extendStatics = function extendStatics(d, b) {\n    _extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) {\n        if (b.hasOwnProperty(p)) d[p] = b[p];\n      }\n    };\n\n    return _extendStatics(d, b);\n  };\n\n  return function (d, b) {\n    _extendStatics(d, b);\n\n    function __() {\n      this.constructor = d;\n    }\n\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\n\nimport { ConsoleLogger as Logger } from '@aws-amplify/core';\nvar logger = new Logger('AuthError');\nvar DEFAULT_MSG = 'Authentication Error';\n\nvar AuthError =\n/** @class */\nfunction (_super) {\n  __extends(AuthError, _super);\n\n  function AuthError(type) {\n    var _this = this;\n\n    var _a = authErrorMessages[type],\n        message = _a.message,\n        log = _a.log;\n    _this = _super.call(this, message) || this; // Hack for making the custom error class work when transpiled to es5\n    // TODO: Delete the following 2 lines after we change the build target to >= es2015\n\n    _this.constructor = AuthError;\n    Object.setPrototypeOf(_this, AuthError.prototype);\n    _this.name = 'AuthError';\n    _this.log = log || message;\n    logger.error(_this.log);\n    return _this;\n  }\n\n  return AuthError;\n}(Error);\n\nexport { AuthError };\n\nvar NoUserPoolError =\n/** @class */\nfunction (_super) {\n  __extends(NoUserPoolError, _super);\n\n  function NoUserPoolError(type) {\n    var _this = _super.call(this, type) || this; // Hack for making the custom error class work when transpiled to es5\n    // TODO: Delete the following 2 lines after we change the build target to >= es2015\n\n\n    _this.constructor = NoUserPoolError;\n    Object.setPrototypeOf(_this, NoUserPoolError.prototype);\n    _this.name = 'NoUserPoolError';\n    return _this;\n  }\n\n  return NoUserPoolError;\n}(AuthError);\n\nexport { NoUserPoolError };\nexport var authErrorMessages = {\n  noConfig: {\n    message: DEFAULT_MSG,\n    log: \"\\n            Error: Amplify has not been configured correctly.\\n            This error is typically caused by one of the following scenarios:\\n\\n            1. Make sure you're passing the awsconfig object to Amplify.configure() in your app's entry point\\n                See https://aws-amplify.github.io/docs/js/authentication#configure-your-app for more information\\n            \\n            2. There might be multiple conflicting versions of aws-amplify or amplify packages in your node_modules.\\n                Try deleting your node_modules folder and reinstalling the dependencies with `yarn install`\\n        \"\n  },\n  missingAuthConfig: {\n    message: DEFAULT_MSG,\n    log: \"\\n            Error: Amplify has not been configured correctly. \\n            The configuration object is missing required auth properties. \\n            Did you run `amplify push` after adding auth via `amplify add auth`?\\n            See https://aws-amplify.github.io/docs/js/authentication#amplify-project-setup for more information\\n        \"\n  },\n  emptyUsername: {\n    message: 'Username cannot be empty'\n  },\n  // TODO: should include a list of valid sign-in types\n  invalidUsername: {\n    message: 'The username should either be a string or one of the sign in types'\n  },\n  emptyPassword: {\n    message: 'Password cannot be empty'\n  },\n  emptyCode: {\n    message: 'Confirmation code cannot be empty'\n  },\n  signUpError: {\n    message: 'Error creating account',\n    log: 'The first parameter should either be non-null string or object'\n  },\n  noMFA: {\n    message: 'No valid MFA method provided'\n  },\n  invalidMFA: {\n    message: 'Invalid MFA type'\n  },\n  emptyChallengeResponse: {\n    message: 'Challenge response cannot be empty'\n  },\n  noUserSession: {\n    message: 'Failed to get the session because the user is empty'\n  },\n  default: {\n    message: DEFAULT_MSG\n  }\n};","map":{"version":3,"sources":["../src/Errors.ts"],"names":[],"mappings":"AAAA;;;;;;;;;;;AAWG;;;;;;;;;;;;;;;;;;;;;;;;;;;AAGH,SAAS,aAAa,IAAI,MAA1B,QAAwC,mBAAxC;AAEA,IAAM,MAAM,GAAG,IAAI,MAAJ,CAAW,WAAX,CAAf;AACA,IAAM,WAAW,GAAG,sBAApB;;AAEA,IAAA,SAAA;AAAA;AAAA,UAAA,MAAA,EAAA;AAA+B,EAAA,SAAA,CAAA,SAAA,EAAA,MAAA,CAAA;;AAE9B,WAAA,SAAA,CAAY,IAAZ,EAAgC;AAAhC,QAAA,KAAA,GAAA,IAAA;;AACO,QAAA,EAAA,GAAA,iBAAA,CAAA,IAAA,CAAA;AAAA,QAAE,OAAA,GAAA,EAAA,CAAA,OAAF;AAAA,QAAW,GAAA,GAAA,EAAA,CAAA,GAAX;AACN,IAAA,KAAA,GAAA,MAAA,CAAA,IAAA,CAAA,IAAA,EAAM,OAAN,KAAc,IAAd,CAF+B,CAI/B;AACA;;AACA,IAAA,KAAI,CAAC,WAAL,GAAmB,SAAnB;AACA,IAAA,MAAM,CAAC,cAAP,CAAsB,KAAtB,EAA4B,SAAS,CAAC,SAAtC;AAEA,IAAA,KAAI,CAAC,IAAL,GAAY,WAAZ;AACA,IAAA,KAAI,CAAC,GAAL,GAAW,GAAG,IAAI,OAAlB;AAEA,IAAA,MAAM,CAAC,KAAP,CAAa,KAAI,CAAC,GAAlB;;AACA;;AACF,SAAA,SAAA;AAAC,CAhBD,CAA+B,KAA/B,CAAA;;;;AAkBA,IAAA,eAAA;AAAA;AAAA,UAAA,MAAA,EAAA;AAAqC,EAAA,SAAA,CAAA,eAAA,EAAA,MAAA,CAAA;;AACpC,WAAA,eAAA,CAAY,IAAZ,EAAgC;AAAhC,QAAA,KAAA,GACC,MAAA,CAAA,IAAA,CAAA,IAAA,EAAM,IAAN,KAAW,IADZ,CAAgC,CAG/B;AACA;;;AACA,IAAA,KAAI,CAAC,WAAL,GAAmB,eAAnB;AACA,IAAA,MAAM,CAAC,cAAP,CAAsB,KAAtB,EAA4B,eAAe,CAAC,SAA5C;AAEA,IAAA,KAAI,CAAC,IAAL,GAAY,iBAAZ;;AACA;;AACF,SAAA,eAAA;AAAC,CAXD,CAAqC,SAArC,CAAA;;;AAaA,OAAO,IAAM,iBAAiB,GAAsB;AACnD,EAAA,QAAQ,EAAE;AACT,IAAA,OAAO,EAAE,WADA;AAET,IAAA,GAAG,EAAE;AAFI,GADyC;AAcnD,EAAA,iBAAiB,EAAE;AAClB,IAAA,OAAO,EAAE,WADS;AAElB,IAAA,GAAG,EAAE;AAFa,GAdgC;AAuBnD,EAAA,aAAa,EAAE;AACd,IAAA,OAAO,EAAE;AADK,GAvBoC;AA0BnD;AACA,EAAA,eAAe,EAAE;AAChB,IAAA,OAAO,EACN;AAFe,GA3BkC;AA+BnD,EAAA,aAAa,EAAE;AACd,IAAA,OAAO,EAAE;AADK,GA/BoC;AAkCnD,EAAA,SAAS,EAAE;AACV,IAAA,OAAO,EAAE;AADC,GAlCwC;AAqCnD,EAAA,WAAW,EAAE;AACZ,IAAA,OAAO,EAAE,wBADG;AAEZ,IAAA,GAAG,EAAE;AAFO,GArCsC;AAyCnD,EAAA,KAAK,EAAE;AACN,IAAA,OAAO,EAAE;AADH,GAzC4C;AA4CnD,EAAA,UAAU,EAAE;AACX,IAAA,OAAO,EAAE;AADE,GA5CuC;AA+CnD,EAAA,sBAAsB,EAAE;AACvB,IAAA,OAAO,EAAE;AADc,GA/C2B;AAkDnD,EAAA,aAAa,EAAE;AACd,IAAA,OAAO,EAAE;AADK,GAlDoC;AAqDnD,EAAA,OAAO,EAAE;AACR,IAAA,OAAO,EAAE;AADD;AArD0C,CAA7C","sourceRoot":"","sourcesContent":["/*\r\n * Copyright 2019-2020 Amazon.com, Inc. or its affiliates. All Rights Reserved.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\"). You may not use this file except in compliance with\r\n * the License. A copy of the License is located at\r\n *\r\n *     http://aws.amazon.com/apache2.0/\r\n *\r\n * or in the \"license\" file accompanying this file. This file is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR\r\n * CONDITIONS OF ANY KIND, either express or implied. See the License for the specific language governing permissions\r\n * and limitations under the License.\r\n */\r\nvar __extends = (this && this.__extends) || (function () {\r\n    var extendStatics = function (d, b) {\r\n        extendStatics = Object.setPrototypeOf ||\r\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n        return extendStatics(d, b);\r\n    };\r\n    return function (d, b) {\r\n        extendStatics(d, b);\r\n        function __() { this.constructor = d; }\r\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n    };\r\n})();\r\nimport { ConsoleLogger as Logger } from '@aws-amplify/core';\r\nvar logger = new Logger('AuthError');\r\nvar DEFAULT_MSG = 'Authentication Error';\r\nvar AuthError = /** @class */ (function (_super) {\r\n    __extends(AuthError, _super);\r\n    function AuthError(type) {\r\n        var _this = this;\r\n        var _a = authErrorMessages[type], message = _a.message, log = _a.log;\r\n        _this = _super.call(this, message) || this;\r\n        // Hack for making the custom error class work when transpiled to es5\r\n        // TODO: Delete the following 2 lines after we change the build target to >= es2015\r\n        _this.constructor = AuthError;\r\n        Object.setPrototypeOf(_this, AuthError.prototype);\r\n        _this.name = 'AuthError';\r\n        _this.log = log || message;\r\n        logger.error(_this.log);\r\n        return _this;\r\n    }\r\n    return AuthError;\r\n}(Error));\r\nexport { AuthError };\r\nvar NoUserPoolError = /** @class */ (function (_super) {\r\n    __extends(NoUserPoolError, _super);\r\n    function NoUserPoolError(type) {\r\n        var _this = _super.call(this, type) || this;\r\n        // Hack for making the custom error class work when transpiled to es5\r\n        // TODO: Delete the following 2 lines after we change the build target to >= es2015\r\n        _this.constructor = NoUserPoolError;\r\n        Object.setPrototypeOf(_this, NoUserPoolError.prototype);\r\n        _this.name = 'NoUserPoolError';\r\n        return _this;\r\n    }\r\n    return NoUserPoolError;\r\n}(AuthError));\r\nexport { NoUserPoolError };\r\nexport var authErrorMessages = {\r\n    noConfig: {\r\n        message: DEFAULT_MSG,\r\n        log: \"\\n            Error: Amplify has not been configured correctly.\\n            This error is typically caused by one of the following scenarios:\\n\\n            1. Make sure you're passing the awsconfig object to Amplify.configure() in your app's entry point\\n                See https://aws-amplify.github.io/docs/js/authentication#configure-your-app for more information\\n            \\n            2. There might be multiple conflicting versions of aws-amplify or amplify packages in your node_modules.\\n                Try deleting your node_modules folder and reinstalling the dependencies with `yarn install`\\n        \",\r\n    },\r\n    missingAuthConfig: {\r\n        message: DEFAULT_MSG,\r\n        log: \"\\n            Error: Amplify has not been configured correctly. \\n            The configuration object is missing required auth properties. \\n            Did you run `amplify push` after adding auth via `amplify add auth`?\\n            See https://aws-amplify.github.io/docs/js/authentication#amplify-project-setup for more information\\n        \",\r\n    },\r\n    emptyUsername: {\r\n        message: 'Username cannot be empty',\r\n    },\r\n    // TODO: should include a list of valid sign-in types\r\n    invalidUsername: {\r\n        message: 'The username should either be a string or one of the sign in types',\r\n    },\r\n    emptyPassword: {\r\n        message: 'Password cannot be empty',\r\n    },\r\n    emptyCode: {\r\n        message: 'Confirmation code cannot be empty',\r\n    },\r\n    signUpError: {\r\n        message: 'Error creating account',\r\n        log: 'The first parameter should either be non-null string or object',\r\n    },\r\n    noMFA: {\r\n        message: 'No valid MFA method provided',\r\n    },\r\n    invalidMFA: {\r\n        message: 'Invalid MFA type',\r\n    },\r\n    emptyChallengeResponse: {\r\n        message: 'Challenge response cannot be empty',\r\n    },\r\n    noUserSession: {\r\n        message: 'Failed to get the session because the user is empty',\r\n    },\r\n    default: {\r\n        message: DEFAULT_MSG,\r\n    },\r\n};\r\n//# sourceMappingURL=Errors.js.map"]},"metadata":{},"sourceType":"module"}