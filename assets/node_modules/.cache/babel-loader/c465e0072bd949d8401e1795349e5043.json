{"ast":null,"code":"var __assign = this && this.__assign || function () {\n  __assign = Object.assign || function (t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n\n      for (var p in s) {\n        if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n      }\n    }\n\n    return t;\n  };\n\n  return __assign.apply(this, arguments);\n};\n\nimport { ConsoleLogger as Logger } from '@aws-amplify/core';\nvar logger = new Logger('AbstractXRProvider');\n\nvar AbstractXRProvider =\n/** @class */\nfunction () {\n  function AbstractXRProvider(options) {\n    if (options === void 0) {\n      options = {};\n    }\n\n    this._config = options;\n  }\n\n  AbstractXRProvider.prototype.configure = function (config) {\n    if (config === void 0) {\n      config = {};\n    }\n\n    this._config = __assign(__assign({}, config), this._config);\n    logger.debug(\"configure \" + this.getProviderName(), this._config);\n    return this.options;\n  };\n\n  AbstractXRProvider.prototype.getCategory = function () {\n    return 'XR';\n  };\n\n  Object.defineProperty(AbstractXRProvider.prototype, \"options\", {\n    get: function get() {\n      return __assign({}, this._config);\n    },\n    enumerable: true,\n    configurable: true\n  });\n  return AbstractXRProvider;\n}();\n\nexport { AbstractXRProvider };","map":{"version":3,"sources":["../../src/Providers/XRProvider.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;AAaA,SAAS,aAAa,IAAI,MAA1B,QAAwC,mBAAxC;AAEA,IAAM,MAAM,GAAG,IAAI,MAAJ,CAAW,oBAAX,CAAf;;AAEA,IAAA,kBAAA;AAAA;AAAA,YAAA;AAGC,WAAA,kBAAA,CAAY,OAAZ,EAAyC;AAA7B,QAAA,OAAA,KAAA,KAAA,CAAA,EAAA;AAAA,MAAA,OAAA,GAAA,EAAA;AAA6B;;AACxC,SAAK,OAAL,GAAe,OAAf;AACA;;AAED,EAAA,kBAAA,CAAA,SAAA,CAAA,SAAA,GAAA,UAAU,MAAV,EAAsC;AAA5B,QAAA,MAAA,KAAA,KAAA,CAAA,EAAA;AAAA,MAAA,MAAA,GAAA,EAAA;AAA4B;;AACrC,SAAK,OAAL,GAAY,QAAA,CAAA,QAAA,CAAA,EAAA,EAAQ,MAAR,CAAA,EAAmB,KAAK,OAAxB,CAAZ;AAEA,IAAA,MAAM,CAAC,KAAP,CAAa,eAAa,KAAK,eAAL,EAA1B,EAAoD,KAAK,OAAzD;AAEA,WAAO,KAAK,OAAZ;AACA,GAND;;AAQA,EAAA,kBAAA,CAAA,SAAA,CAAA,WAAA,GAAA,YAAA;AACC,WAAO,IAAP;AACA,GAFD;;AAMA,EAAA,MAAA,CAAA,cAAA,CAAc,kBAAA,CAAA,SAAd,EAAc,SAAd,EAAqB;SAArB,eAAA;AACC,aAAA,QAAA,CAAA,EAAA,EAAY,KAAK,OAAjB,CAAA;AACA,KAFoB;oBAAA;;AAAA,GAArB;AAwBD,SAAA,kBAAA;AAAC,CA7CD,EAAA","sourceRoot":"","sourcesContent":["var __assign = (this && this.__assign) || function () {\r\n    __assign = Object.assign || function(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\r\n                t[p] = s[p];\r\n        }\r\n        return t;\r\n    };\r\n    return __assign.apply(this, arguments);\r\n};\r\nimport { ConsoleLogger as Logger } from '@aws-amplify/core';\r\nvar logger = new Logger('AbstractXRProvider');\r\nvar AbstractXRProvider = /** @class */ (function () {\r\n    function AbstractXRProvider(options) {\r\n        if (options === void 0) { options = {}; }\r\n        this._config = options;\r\n    }\r\n    AbstractXRProvider.prototype.configure = function (config) {\r\n        if (config === void 0) { config = {}; }\r\n        this._config = __assign(__assign({}, config), this._config);\r\n        logger.debug(\"configure \" + this.getProviderName(), this._config);\r\n        return this.options;\r\n    };\r\n    AbstractXRProvider.prototype.getCategory = function () {\r\n        return 'XR';\r\n    };\r\n    Object.defineProperty(AbstractXRProvider.prototype, \"options\", {\r\n        get: function () {\r\n            return __assign({}, this._config);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    return AbstractXRProvider;\r\n}());\r\nexport { AbstractXRProvider };\r\n//# sourceMappingURL=XRProvider.js.map"]},"metadata":{},"sourceType":"module"}