{"ast":null,"code":"/*\r\n * Copyright 2017-2017 Amazon.com, Inc. or its affiliates. All Rights Reserved.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\"). You may not use this file except in compliance with\r\n * the License. A copy of the License is located at\r\n *\r\n *     http://aws.amazon.com/apache2.0/\r\n *\r\n * or in the \"license\" file accompanying this file. This file is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR\r\n * CONDITIONS OF ANY KIND, either express or implied. See the License for the specific language governing permissions\r\n * and limitations under the License.\r\n */\nimport { getCurrTime, getByteLength, defaultConfig, isInteger } from './Utils';\nimport { ConsoleLogger as Logger } from '@aws-amplify/core';\nvar logger = new Logger('StorageCache');\n/**\r\n * Initialization of the cache\r\n *\r\n */\n\nvar StorageCache =\n/** @class */\nfunction () {\n  /**\r\n   * Initialize the cache\r\n   * @param config - the configuration of the cache\r\n   */\n  function StorageCache(config) {\n    this.config = Object.assign({}, config);\n    this.cacheCurSizeKey = this.config.keyPrefix + 'CurSize';\n    this.checkConfig();\n  }\n\n  StorageCache.prototype.getModuleName = function () {\n    return 'Cache';\n  };\n\n  StorageCache.prototype.checkConfig = function () {\n    // check configuration\n    if (!isInteger(this.config.capacityInBytes)) {\n      logger.error('Invalid parameter: capacityInBytes. It should be an Integer. Setting back to default.');\n      this.config.capacityInBytes = defaultConfig.capacityInBytes;\n    }\n\n    if (!isInteger(this.config.itemMaxSize)) {\n      logger.error('Invalid parameter: itemMaxSize. It should be an Integer. Setting back to default.');\n      this.config.itemMaxSize = defaultConfig.itemMaxSize;\n    }\n\n    if (!isInteger(this.config.defaultTTL)) {\n      logger.error('Invalid parameter: defaultTTL. It should be an Integer. Setting back to default.');\n      this.config.defaultTTL = defaultConfig.defaultTTL;\n    }\n\n    if (!isInteger(this.config.defaultPriority)) {\n      logger.error('Invalid parameter: defaultPriority. It should be an Integer. Setting back to default.');\n      this.config.defaultPriority = defaultConfig.defaultPriority;\n    }\n\n    if (this.config.itemMaxSize > this.config.capacityInBytes) {\n      logger.error('Invalid parameter: itemMaxSize. It should be smaller than capacityInBytes. Setting back to default.');\n      this.config.itemMaxSize = defaultConfig.itemMaxSize;\n    }\n\n    if (this.config.defaultPriority > 5 || this.config.defaultPriority < 1) {\n      logger.error('Invalid parameter: defaultPriority. It should be between 1 and 5. Setting back to default.');\n      this.config.defaultPriority = defaultConfig.defaultPriority;\n    }\n\n    if (Number(this.config.warningThreshold) > 1 || Number(this.config.warningThreshold) < 0) {\n      logger.error('Invalid parameter: warningThreshold. It should be between 0 and 1. Setting back to default.');\n      this.config.warningThreshold = defaultConfig.warningThreshold;\n    } // set 5MB limit\n\n\n    var cacheLimit = 5 * 1024 * 1024;\n\n    if (this.config.capacityInBytes > cacheLimit) {\n      logger.error('Cache Capacity should be less than 5MB. Setting back to default. Setting back to default.');\n      this.config.capacityInBytes = defaultConfig.capacityInBytes;\n    }\n  };\n  /**\r\n   * produce a JSON object with meta-data and data value\r\n   * @param value - the value of the item\r\n   * @param options - optional, the specified meta-data\r\n   *\r\n   * @return - the item which has the meta-data and the value\r\n   */\n\n\n  StorageCache.prototype.fillCacheItem = function (key, value, options) {\n    var ret = {\n      key: key,\n      data: value,\n      timestamp: getCurrTime(),\n      visitedTime: getCurrTime(),\n      priority: options.priority,\n      expires: options.expires,\n      type: typeof value,\n      byteSize: 0\n    };\n    ret.byteSize = getByteLength(JSON.stringify(ret)); // for accurate size\n\n    ret.byteSize = getByteLength(JSON.stringify(ret));\n    return ret;\n  };\n  /**\r\n   * set cache with customized configuration\r\n   * @param config - customized configuration\r\n   *\r\n   * @return - the current configuration\r\n   */\n\n\n  StorageCache.prototype.configure = function (config) {\n    if (!config) {\n      return this.config;\n    }\n\n    if (config.keyPrefix) {\n      logger.warn(\"Don't try to configure keyPrefix!\");\n    }\n\n    this.config = Object.assign({}, this.config, config, config.Cache);\n    this.checkConfig();\n    return this.config;\n  };\n\n  return StorageCache;\n}();\n\nexport default StorageCache;","map":{"version":3,"sources":["../src/StorageCache.ts"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["/*\r\n * Copyright 2017-2017 Amazon.com, Inc. or its affiliates. All Rights Reserved.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\"). You may not use this file except in compliance with\r\n * the License. A copy of the License is located at\r\n *\r\n *     http://aws.amazon.com/apache2.0/\r\n *\r\n * or in the \"license\" file accompanying this file. This file is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR\r\n * CONDITIONS OF ANY KIND, either express or implied. See the License for the specific language governing permissions\r\n * and limitations under the License.\r\n */\r\nimport { getCurrTime, getByteLength, defaultConfig, isInteger } from './Utils';\r\nimport { ConsoleLogger as Logger } from '@aws-amplify/core';\r\nvar logger = new Logger('StorageCache');\r\n/**\r\n * Initialization of the cache\r\n *\r\n */\r\nvar StorageCache = /** @class */ (function () {\r\n    /**\r\n     * Initialize the cache\r\n     * @param config - the configuration of the cache\r\n     */\r\n    function StorageCache(config) {\r\n        this.config = Object.assign({}, config);\r\n        this.cacheCurSizeKey = this.config.keyPrefix + 'CurSize';\r\n        this.checkConfig();\r\n    }\r\n    StorageCache.prototype.getModuleName = function () {\r\n        return 'Cache';\r\n    };\r\n    StorageCache.prototype.checkConfig = function () {\r\n        // check configuration\r\n        if (!isInteger(this.config.capacityInBytes)) {\r\n            logger.error('Invalid parameter: capacityInBytes. It should be an Integer. Setting back to default.');\r\n            this.config.capacityInBytes = defaultConfig.capacityInBytes;\r\n        }\r\n        if (!isInteger(this.config.itemMaxSize)) {\r\n            logger.error('Invalid parameter: itemMaxSize. It should be an Integer. Setting back to default.');\r\n            this.config.itemMaxSize = defaultConfig.itemMaxSize;\r\n        }\r\n        if (!isInteger(this.config.defaultTTL)) {\r\n            logger.error('Invalid parameter: defaultTTL. It should be an Integer. Setting back to default.');\r\n            this.config.defaultTTL = defaultConfig.defaultTTL;\r\n        }\r\n        if (!isInteger(this.config.defaultPriority)) {\r\n            logger.error('Invalid parameter: defaultPriority. It should be an Integer. Setting back to default.');\r\n            this.config.defaultPriority = defaultConfig.defaultPriority;\r\n        }\r\n        if (this.config.itemMaxSize > this.config.capacityInBytes) {\r\n            logger.error('Invalid parameter: itemMaxSize. It should be smaller than capacityInBytes. Setting back to default.');\r\n            this.config.itemMaxSize = defaultConfig.itemMaxSize;\r\n        }\r\n        if (this.config.defaultPriority > 5 || this.config.defaultPriority < 1) {\r\n            logger.error('Invalid parameter: defaultPriority. It should be between 1 and 5. Setting back to default.');\r\n            this.config.defaultPriority = defaultConfig.defaultPriority;\r\n        }\r\n        if (Number(this.config.warningThreshold) > 1 ||\r\n            Number(this.config.warningThreshold) < 0) {\r\n            logger.error('Invalid parameter: warningThreshold. It should be between 0 and 1. Setting back to default.');\r\n            this.config.warningThreshold = defaultConfig.warningThreshold;\r\n        }\r\n        // set 5MB limit\r\n        var cacheLimit = 5 * 1024 * 1024;\r\n        if (this.config.capacityInBytes > cacheLimit) {\r\n            logger.error('Cache Capacity should be less than 5MB. Setting back to default. Setting back to default.');\r\n            this.config.capacityInBytes = defaultConfig.capacityInBytes;\r\n        }\r\n    };\r\n    /**\r\n     * produce a JSON object with meta-data and data value\r\n     * @param value - the value of the item\r\n     * @param options - optional, the specified meta-data\r\n     *\r\n     * @return - the item which has the meta-data and the value\r\n     */\r\n    StorageCache.prototype.fillCacheItem = function (key, value, options) {\r\n        var ret = {\r\n            key: key,\r\n            data: value,\r\n            timestamp: getCurrTime(),\r\n            visitedTime: getCurrTime(),\r\n            priority: options.priority,\r\n            expires: options.expires,\r\n            type: typeof value,\r\n            byteSize: 0,\r\n        };\r\n        ret.byteSize = getByteLength(JSON.stringify(ret));\r\n        // for accurate size\r\n        ret.byteSize = getByteLength(JSON.stringify(ret));\r\n        return ret;\r\n    };\r\n    /**\r\n     * set cache with customized configuration\r\n     * @param config - customized configuration\r\n     *\r\n     * @return - the current configuration\r\n     */\r\n    StorageCache.prototype.configure = function (config) {\r\n        if (!config) {\r\n            return this.config;\r\n        }\r\n        if (config.keyPrefix) {\r\n            logger.warn(\"Don't try to configure keyPrefix!\");\r\n        }\r\n        this.config = Object.assign({}, this.config, config, config.Cache);\r\n        this.checkConfig();\r\n        return this.config;\r\n    };\r\n    return StorageCache;\r\n}());\r\nexport default StorageCache;\r\n//# sourceMappingURL=StorageCache.js.map"]},"metadata":{},"sourceType":"module"}