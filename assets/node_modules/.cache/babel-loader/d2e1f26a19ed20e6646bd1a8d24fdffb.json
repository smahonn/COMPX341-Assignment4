{"ast":null,"code":"var __awaiter = this && this.__awaiter || function (thisArg, _arguments, P, generator) {\n  function adopt(value) {\n    return value instanceof P ? value : new P(function (resolve) {\n      resolve(value);\n    });\n  }\n\n  return new (P || (P = Promise))(function (resolve, reject) {\n    function fulfilled(value) {\n      try {\n        step(generator.next(value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function rejected(value) {\n      try {\n        step(generator[\"throw\"](value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function step(result) {\n      result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);\n    }\n\n    step((generator = generator.apply(thisArg, _arguments || [])).next());\n  });\n};\n\nvar __generator = this && this.__generator || function (thisArg, body) {\n  var _ = {\n    label: 0,\n    sent: function sent() {\n      if (t[0] & 1) throw t[1];\n      return t[1];\n    },\n    trys: [],\n    ops: []\n  },\n      f,\n      y,\n      t,\n      g;\n  return g = {\n    next: verb(0),\n    \"throw\": verb(1),\n    \"return\": verb(2)\n  }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function () {\n    return this;\n  }), g;\n\n  function verb(n) {\n    return function (v) {\n      return step([n, v]);\n    };\n  }\n\n  function step(op) {\n    if (f) throw new TypeError(\"Generator is already executing.\");\n\n    while (_) {\n      try {\n        if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n        if (y = 0, t) op = [op[0] & 2, t.value];\n\n        switch (op[0]) {\n          case 0:\n          case 1:\n            t = op;\n            break;\n\n          case 4:\n            _.label++;\n            return {\n              value: op[1],\n              done: false\n            };\n\n          case 5:\n            _.label++;\n            y = op[1];\n            op = [0];\n            continue;\n\n          case 7:\n            op = _.ops.pop();\n\n            _.trys.pop();\n\n            continue;\n\n          default:\n            if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) {\n              _ = 0;\n              continue;\n            }\n\n            if (op[0] === 3 && (!t || op[1] > t[0] && op[1] < t[3])) {\n              _.label = op[1];\n              break;\n            }\n\n            if (op[0] === 6 && _.label < t[1]) {\n              _.label = t[1];\n              t = op;\n              break;\n            }\n\n            if (t && _.label < t[2]) {\n              _.label = t[2];\n\n              _.ops.push(op);\n\n              break;\n            }\n\n            if (t[2]) _.ops.pop();\n\n            _.trys.pop();\n\n            continue;\n        }\n\n        op = body.call(thisArg, _);\n      } catch (e) {\n        op = [6, e];\n        y = 0;\n      } finally {\n        f = t = 0;\n      }\n    }\n\n    if (op[0] & 5) throw op[1];\n    return {\n      value: op[0] ? op[1] : void 0,\n      done: true\n    };\n  }\n};\n/*\r\n * Copyright 2017-2018 Amazon.com, Inc. or its affiliates. All Rights Reserved.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\"). You may not use this file except in compliance with\r\n * the License. A copy of the License is located at\r\n *\r\n *     http://aws.amazon.com/apache2.0/\r\n *\r\n * or in the \"license\" file accompanying this file. This file is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR\r\n * CONDITIONS OF ANY KIND, either express or implied. See the License for the specific language governing permissions\r\n * and limitations under the License.\r\n */\n// import '../Common/Polyfills';\n\n\nimport * as Observable from 'zen-observable';\nimport { ConsoleLogger as Logger } from '@aws-amplify/core';\nimport { INTERNAL_AWS_APPSYNC_PUBSUB_PROVIDER } from '@aws-amplify/core/lib/constants';\nimport { AWSAppSyncProvider } from './Providers';\nvar logger = new Logger('PubSub');\n\nvar PubSub =\n/** @class */\nfunction () {\n  /**\r\n   * Initialize PubSub with AWS configurations\r\n   *\r\n   * @param {PubSubOptions} options - Configuration object for PubSub\r\n   */\n  function PubSub(options) {\n    this._options = options;\n    logger.debug('PubSub Options', this._options);\n    this._pluggables = [];\n    this.subscribe = this.subscribe.bind(this);\n  }\n\n  Object.defineProperty(PubSub.prototype, \"awsAppSyncProvider\", {\n    /**\r\n     * Lazy instantiate awsAppSyncProvider when it is required by the API category\r\n     */\n    get: function get() {\n      if (!this._awsAppSyncProvider) {\n        this._awsAppSyncProvider = new AWSAppSyncProvider(this._options);\n      }\n\n      return this._awsAppSyncProvider;\n    },\n    enumerable: true,\n    configurable: true\n  });\n\n  PubSub.prototype.getModuleName = function () {\n    return 'PubSub';\n  };\n  /**\r\n   * Configure PubSub part with configurations\r\n   *\r\n   * @param {PubSubOptions} config - Configuration for PubSub\r\n   * @return {Object} - The current configuration\r\n   */\n\n\n  PubSub.prototype.configure = function (options) {\n    var _this = this;\n\n    var opt = options ? options.PubSub || options : {};\n    logger.debug('configure PubSub', {\n      opt: opt\n    });\n    this._options = Object.assign({}, this._options, opt);\n\n    this._pluggables.map(function (pluggable) {\n      return pluggable.configure(_this._options);\n    });\n\n    return this._options;\n  };\n  /**\r\n   * add plugin into Analytics category\r\n   * @param {Object} pluggable - an instance of the plugin\r\n   */\n\n\n  PubSub.prototype.addPluggable = function (pluggable) {\n    return __awaiter(this, void 0, void 0, function () {\n      var config;\n      return __generator(this, function (_a) {\n        if (pluggable && pluggable.getCategory() === 'PubSub') {\n          this._pluggables.push(pluggable);\n\n          config = pluggable.configure(this._options);\n          return [2\n          /*return*/\n          , config];\n        }\n\n        return [2\n        /*return*/\n        ];\n      });\n    });\n  };\n\n  PubSub.prototype.getProviderByName = function (providerName) {\n    if (providerName === INTERNAL_AWS_APPSYNC_PUBSUB_PROVIDER) {\n      return this.awsAppSyncProvider;\n    }\n\n    return this._pluggables.find(function (pluggable) {\n      return pluggable.getProviderName() === providerName;\n    });\n  };\n\n  PubSub.prototype.getProviders = function (options) {\n    if (options === void 0) {\n      options = {};\n    }\n\n    var providerName = options.provider;\n\n    if (!providerName) {\n      return this._pluggables;\n    }\n\n    var provider = this.getProviderByName(providerName);\n\n    if (!provider) {\n      throw new Error(\"Could not find provider named \" + providerName);\n    }\n\n    return [provider];\n  };\n\n  PubSub.prototype.publish = function (topics, msg, options) {\n    return __awaiter(this, void 0, void 0, function () {\n      return __generator(this, function (_a) {\n        return [2\n        /*return*/\n        , Promise.all(this.getProviders(options).map(function (provider) {\n          return provider.publish(topics, msg, options);\n        }))];\n      });\n    });\n  };\n\n  PubSub.prototype.subscribe = function (topics, options) {\n    logger.debug('subscribe options', options);\n    var providers = this.getProviders(options);\n    return new Observable(function (observer) {\n      var observables = providers.map(function (provider) {\n        return {\n          provider: provider,\n          observable: provider.subscribe(topics, options)\n        };\n      });\n      var subscriptions = observables.map(function (_a) {\n        var provider = _a.provider,\n            observable = _a.observable;\n        return observable.subscribe({\n          start: console.error,\n          next: function next(value) {\n            return observer.next({\n              provider: provider,\n              value: value\n            });\n          },\n          error: function error(_error) {\n            return observer.error({\n              provider: provider,\n              error: _error\n            });\n          }\n        });\n      });\n      return function () {\n        return subscriptions.forEach(function (subscription) {\n          return subscription.unsubscribe();\n        });\n      };\n    });\n  };\n\n  return PubSub;\n}();\n\nexport default PubSub;","map":{"version":3,"sources":["../src/PubSub.ts"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n};\r\nvar __generator = (this && this.__generator) || function (thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n};\r\n/*\r\n * Copyright 2017-2018 Amazon.com, Inc. or its affiliates. All Rights Reserved.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\"). You may not use this file except in compliance with\r\n * the License. A copy of the License is located at\r\n *\r\n *     http://aws.amazon.com/apache2.0/\r\n *\r\n * or in the \"license\" file accompanying this file. This file is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR\r\n * CONDITIONS OF ANY KIND, either express or implied. See the License for the specific language governing permissions\r\n * and limitations under the License.\r\n */\r\n// import '../Common/Polyfills';\r\nimport * as Observable from 'zen-observable';\r\nimport { ConsoleLogger as Logger } from '@aws-amplify/core';\r\nimport { INTERNAL_AWS_APPSYNC_PUBSUB_PROVIDER } from '@aws-amplify/core/lib/constants';\r\nimport { AWSAppSyncProvider } from './Providers';\r\nvar logger = new Logger('PubSub');\r\nvar PubSub = /** @class */ (function () {\r\n    /**\r\n     * Initialize PubSub with AWS configurations\r\n     *\r\n     * @param {PubSubOptions} options - Configuration object for PubSub\r\n     */\r\n    function PubSub(options) {\r\n        this._options = options;\r\n        logger.debug('PubSub Options', this._options);\r\n        this._pluggables = [];\r\n        this.subscribe = this.subscribe.bind(this);\r\n    }\r\n    Object.defineProperty(PubSub.prototype, \"awsAppSyncProvider\", {\r\n        /**\r\n         * Lazy instantiate awsAppSyncProvider when it is required by the API category\r\n         */\r\n        get: function () {\r\n            if (!this._awsAppSyncProvider) {\r\n                this._awsAppSyncProvider = new AWSAppSyncProvider(this._options);\r\n            }\r\n            return this._awsAppSyncProvider;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    PubSub.prototype.getModuleName = function () {\r\n        return 'PubSub';\r\n    };\r\n    /**\r\n     * Configure PubSub part with configurations\r\n     *\r\n     * @param {PubSubOptions} config - Configuration for PubSub\r\n     * @return {Object} - The current configuration\r\n     */\r\n    PubSub.prototype.configure = function (options) {\r\n        var _this = this;\r\n        var opt = options ? options.PubSub || options : {};\r\n        logger.debug('configure PubSub', { opt: opt });\r\n        this._options = Object.assign({}, this._options, opt);\r\n        this._pluggables.map(function (pluggable) { return pluggable.configure(_this._options); });\r\n        return this._options;\r\n    };\r\n    /**\r\n     * add plugin into Analytics category\r\n     * @param {Object} pluggable - an instance of the plugin\r\n     */\r\n    PubSub.prototype.addPluggable = function (pluggable) {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var config;\r\n            return __generator(this, function (_a) {\r\n                if (pluggable && pluggable.getCategory() === 'PubSub') {\r\n                    this._pluggables.push(pluggable);\r\n                    config = pluggable.configure(this._options);\r\n                    return [2 /*return*/, config];\r\n                }\r\n                return [2 /*return*/];\r\n            });\r\n        });\r\n    };\r\n    PubSub.prototype.getProviderByName = function (providerName) {\r\n        if (providerName === INTERNAL_AWS_APPSYNC_PUBSUB_PROVIDER) {\r\n            return this.awsAppSyncProvider;\r\n        }\r\n        return this._pluggables.find(function (pluggable) { return pluggable.getProviderName() === providerName; });\r\n    };\r\n    PubSub.prototype.getProviders = function (options) {\r\n        if (options === void 0) { options = {}; }\r\n        var providerName = options.provider;\r\n        if (!providerName) {\r\n            return this._pluggables;\r\n        }\r\n        var provider = this.getProviderByName(providerName);\r\n        if (!provider) {\r\n            throw new Error(\"Could not find provider named \" + providerName);\r\n        }\r\n        return [provider];\r\n    };\r\n    PubSub.prototype.publish = function (topics, msg, options) {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            return __generator(this, function (_a) {\r\n                return [2 /*return*/, Promise.all(this.getProviders(options).map(function (provider) {\r\n                        return provider.publish(topics, msg, options);\r\n                    }))];\r\n            });\r\n        });\r\n    };\r\n    PubSub.prototype.subscribe = function (topics, options) {\r\n        logger.debug('subscribe options', options);\r\n        var providers = this.getProviders(options);\r\n        return new Observable(function (observer) {\r\n            var observables = providers.map(function (provider) { return ({\r\n                provider: provider,\r\n                observable: provider.subscribe(topics, options),\r\n            }); });\r\n            var subscriptions = observables.map(function (_a) {\r\n                var provider = _a.provider, observable = _a.observable;\r\n                return observable.subscribe({\r\n                    start: console.error,\r\n                    next: function (value) { return observer.next({ provider: provider, value: value }); },\r\n                    error: function (error) { return observer.error({ provider: provider, error: error }); },\r\n                });\r\n            });\r\n            return function () {\r\n                return subscriptions.forEach(function (subscription) { return subscription.unsubscribe(); });\r\n            };\r\n        });\r\n    };\r\n    return PubSub;\r\n}());\r\nexport default PubSub;\r\n//# sourceMappingURL=PubSub.js.map"]},"metadata":{},"sourceType":"module"}