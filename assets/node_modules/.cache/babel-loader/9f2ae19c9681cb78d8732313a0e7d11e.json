{"ast":null,"code":"/**\r\n * Copyright (c) 2017, Philip Walton <philip@philipwalton.com>\r\n */\nimport { JS } from '@aws-amplify/core';\nvar proto = JS.browserOrNode().isBrowser && window['Element'] ? window['Element'].prototype : null;\nvar nativeMatches = proto ? proto.matches || // @ts-ignore\nproto.matchesSelector || // @ts-ignore\nproto.webkitMatchesSelector || // @ts-ignore\nproto.mozMatchesSelector || // @ts-ignore\nproto.msMatchesSelector || // @ts-ignore\nproto.oMatchesSelector : null;\n/**\r\n * Tests if a DOM elements matches any of the test DOM elements or selectors.\r\n * @param {Element} element The DOM element to test.\r\n * @param {Element|string|Array<Element|string>} test A DOM element, a CSS\r\n *     selector, or an array of DOM elements or CSS selectors to match against.\r\n * @return {boolean} True of any part of the test matches.\r\n */\n\nexport default function matches(element, test) {\n  // Validate input.\n  if (element && element.nodeType === 1 && test) {\n    // if test is a string or DOM element test it.\n    if (typeof test === 'string' || test.nodeType === 1) {\n      return element === test || matchesSelector(element,\n      /** @type {string} */\n      test);\n    } else if ('length' in test) {\n      // if it has a length property iterate over the items\n      // and return true if any match.\n      for (var i = 0, item = void 0; item = test[i]; i++) {\n        if (element === item || matchesSelector(element, item)) return true;\n      }\n    }\n  } // Still here? Return false\n\n\n  return false;\n}\n/**\r\n * Tests whether a DOM element matches a selector. This polyfills the native\r\n * Element.prototype.matches method across browsers.\r\n * @param {!Element} element The DOM element to test.\r\n * @param {string} selector The CSS selector to test element against.\r\n * @return {boolean} True if the selector matches.\r\n */\n\nfunction matchesSelector(element, selector) {\n  if (typeof selector !== 'string') return false;\n  if (nativeMatches) return nativeMatches.call(element, selector);\n  var nodes = element.parentNode.querySelectorAll(selector);\n\n  for (var i = 0, node = void 0; node = nodes[i]; i++) {\n    if (node === element) return true;\n  }\n\n  return false;\n}","map":{"version":3,"sources":["../../../src/vendor/dom-utils/matches.ts"],"names":[],"mappings":"AAAA;;AAEG;AAEH,SAAS,EAAT,QAAmB,mBAAnB;AAEA,IAAM,KAAK,GACV,EAAE,CAAC,aAAH,GAAmB,SAAnB,IAAgC,MAAM,CAAC,SAAD,CAAtC,GACG,MAAM,CAAC,SAAD,CAAN,CAAkB,SADrB,GAEG,IAHJ;AAKA,IAAM,aAAa,GAAG,KAAK,GACxB,KAAK,CAAC,OAAN,IACA;AACA,KAAK,CAAC,eAFN,IAGA;AACA,KAAK,CAAC,qBAJN,IAKA;AACA,KAAK,CAAC,kBANN,IAOA;AACA,KAAK,CAAC,iBARN,IASA;AACA,KAAK,CAAC,gBAXkB,GAYxB,IAZH;AAcA;;;;;;AAMG;;AACH,eAAc,SAAU,OAAV,CAAkB,OAAlB,EAA2B,IAA3B,EAA+B;AAC5C;AACA,MAAI,OAAO,IAAI,OAAO,CAAC,QAAR,KAAqB,CAAhC,IAAqC,IAAzC,EAA+C;AAC9C;AACA,QAAI,OAAO,IAAP,KAAgB,QAAhB,IAA4B,IAAI,CAAC,QAAL,KAAkB,CAAlD,EAAqD;AACpD,aACC,OAAO,KAAK,IAAZ,IAAoB,eAAe,CAAC,OAAD;AAAU;AAAsB,MAAA,IAAhC,CADpC;AAGA,KAJD,MAIO,IAAI,YAAY,IAAhB,EAAsB;AAC5B;AACA;AACA,WAAK,IAAI,CAAC,GAAG,CAAR,EAAW,IAAI,GAAA,KAAA,CAApB,EAAuB,IAAI,GAAG,IAAI,CAAC,CAAD,CAAlC,EAAwC,CAAC,EAAzC,EAA6C;AAC5C,YAAI,OAAO,KAAK,IAAZ,IAAoB,eAAe,CAAC,OAAD,EAAU,IAAV,CAAvC,EAAwD,OAAO,IAAP;AACxD;AACD;AACD,GAf2C,CAgB5C;;;AACA,SAAO,KAAP;AACA;AAED;;;;;;AAMG;;AACH,SAAS,eAAT,CAAyB,OAAzB,EAAkC,QAAlC,EAA0C;AACzC,MAAI,OAAO,QAAP,KAAoB,QAAxB,EAAkC,OAAO,KAAP;AAClC,MAAI,aAAJ,EAAmB,OAAO,aAAa,CAAC,IAAd,CAAmB,OAAnB,EAA4B,QAA5B,CAAP;AACnB,MAAM,KAAK,GAAG,OAAO,CAAC,UAAR,CAAmB,gBAAnB,CAAoC,QAApC,CAAd;;AACA,OAAK,IAAI,CAAC,GAAG,CAAR,EAAW,IAAI,GAAA,KAAA,CAApB,EAAuB,IAAI,GAAG,KAAK,CAAC,CAAD,CAAnC,EAAyC,CAAC,EAA1C,EAA8C;AAC7C,QAAI,IAAI,KAAK,OAAb,EAAsB,OAAO,IAAP;AACtB;;AACD,SAAO,KAAP;AACA","sourceRoot":"","sourcesContent":["/**\r\n * Copyright (c) 2017, Philip Walton <philip@philipwalton.com>\r\n */\r\nimport { JS } from '@aws-amplify/core';\r\nvar proto = JS.browserOrNode().isBrowser && window['Element']\r\n    ? window['Element'].prototype\r\n    : null;\r\nvar nativeMatches = proto\r\n    ? proto.matches ||\r\n        // @ts-ignore\r\n        proto.matchesSelector ||\r\n        // @ts-ignore\r\n        proto.webkitMatchesSelector ||\r\n        // @ts-ignore\r\n        proto.mozMatchesSelector ||\r\n        // @ts-ignore\r\n        proto.msMatchesSelector ||\r\n        // @ts-ignore\r\n        proto.oMatchesSelector\r\n    : null;\r\n/**\r\n * Tests if a DOM elements matches any of the test DOM elements or selectors.\r\n * @param {Element} element The DOM element to test.\r\n * @param {Element|string|Array<Element|string>} test A DOM element, a CSS\r\n *     selector, or an array of DOM elements or CSS selectors to match against.\r\n * @return {boolean} True of any part of the test matches.\r\n */\r\nexport default function matches(element, test) {\r\n    // Validate input.\r\n    if (element && element.nodeType === 1 && test) {\r\n        // if test is a string or DOM element test it.\r\n        if (typeof test === 'string' || test.nodeType === 1) {\r\n            return (element === test || matchesSelector(element, /** @type {string} */ test));\r\n        }\r\n        else if ('length' in test) {\r\n            // if it has a length property iterate over the items\r\n            // and return true if any match.\r\n            for (var i = 0, item = void 0; (item = test[i]); i++) {\r\n                if (element === item || matchesSelector(element, item))\r\n                    return true;\r\n            }\r\n        }\r\n    }\r\n    // Still here? Return false\r\n    return false;\r\n}\r\n/**\r\n * Tests whether a DOM element matches a selector. This polyfills the native\r\n * Element.prototype.matches method across browsers.\r\n * @param {!Element} element The DOM element to test.\r\n * @param {string} selector The CSS selector to test element against.\r\n * @return {boolean} True if the selector matches.\r\n */\r\nfunction matchesSelector(element, selector) {\r\n    if (typeof selector !== 'string')\r\n        return false;\r\n    if (nativeMatches)\r\n        return nativeMatches.call(element, selector);\r\n    var nodes = element.parentNode.querySelectorAll(selector);\r\n    for (var i = 0, node = void 0; (node = nodes[i]); i++) {\r\n        if (node === element)\r\n            return true;\r\n    }\r\n    return false;\r\n}\r\n//# sourceMappingURL=matches.js.map"]},"metadata":{},"sourceType":"module"}